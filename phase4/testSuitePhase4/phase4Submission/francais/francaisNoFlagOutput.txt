make: Entering directory `/cas/student/cisc458n/cisc458/phase4/coderlinux'
/bin/cp coder.out coder.sst coder.def ../lib/pt
make: Leaving directory `/cas/student/cisc458n/cisc458/phase4/coderlinux'
@Program
 @EmitProgramPrologue
  oEmitNone(iData)
  oOperandPushMode(mWord)
  oOperandSetLength(two)
  oOperandEnterValueFromDataAreaSize
  oOperandPushMode(mGlobalBase)
  oEmitDouble(iSpace)
  oOperandPop
  oOperandPop
  oEmitProcLabel(mLineNum)
  oOperandPushMode(mWord)
  oOperandSetLength(two)
  oOperandSetValue(zero)
  oEmitSingle(iWord)
  oOperandPop
  oEmitNone(iText)
  oOperandPushMode(mMainProc)
  oEmitSingle(iGlobl)
  oEmitProcLabel(mMainProc)
  oOperandPop
  oEmitNone(iEnter)
  >>
 ;EmitProgramPrologue
 @Block
  [ (tLiteralInteger)
  | tLiteralInteger:
  oOperandPushInteger
  ?tLiteralAddress (tLiteralAddress)
  oOperandPushVariable
  oOperandSwap
  oEmitDouble(iMov)
  [ (tFileDescriptor)
  | tFileDescriptor:
  ] or >
  oOperandPop
  oOperandPop
  ] or >
  }
  [ (tLiteralInteger)
  | tLiteralInteger:
  oOperandPushInteger
  ?tLiteralAddress (tLiteralAddress)
  oOperandPushVariable
  oOperandSwap
  oEmitDouble(iMov)
  [ (tFileDescriptor)
  | tFileDescriptor:
  ] or >
  oOperandPop
  oOperandPop
  ] or >
  }
  [ (tDoBegin)
  | tDoBegin:
  @DoStmt
   oFixPushAddress
   oEmitMergeSourceCoordinate
   @Statements
    [ (tWriteBegin)
    | tWriteBegin:
    @WriteProc
     oEmitSourceCoordinate
     [ (tTrapBegin)
     | *:
     @WriteParameter
      ?tTrapBegin (tTrapBegin)
      ?tLiteralAddress (tLiteralAddress)
      @OperandPushVariable
       oOperandPushVariable
       [ (tVarParm)
       | *:
       [ (tVarParm)
       | *:
       [ (tVarParm)
       | *:
       >>
      ;OperandPushVariable
      @OperandForceToStack
       [ oOperandChooseLength (two)
       | two:
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStatic)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mStack)
       ] or >
       >>
      ;OperandForceToStack
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStack)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      ?tVarParm (tVarParm)
      ?tParmEnd (tParmEnd)
      @OperandPushExpression
       [ (tLiteralString)
       | tLiteralString:
       oEmitNone(iData)
       oEmitString
       oEmitNone(iText)
       oOperandPushString
       @EmitStringDescriptor
        @OperandForceAddressIntoTemp
         [ oOperandChooseMode (mString)
         | mString:
         @OperandPushTempWord
          oTempAllocate
          oOperandPushTemp
          oOperandSetValue(zero)
          oOperandSetLength(two)
          >>
         ;OperandPushTempWord
         oOperandSwap
         oEmitDouble(iLoada)
         oOperandPop
         ] or >
         oOperandSetLength(two)
         >>
        ;OperandForceAddressIntoTemp
        >>
       ;EmitStringDescriptor
       ] or >
       }
       [ (tParmEnd)
       | *:
       ] or >
       >>
      ;OperandPushExpression
      [ (tParmEnd)
      | *:
      @OperandForceToStack
       [ oOperandChooseLength (two)
       | two:
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mTemp)
        | mTemp:
        oTempFree
        ] or >
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mStack)
       ] or >
       >>
      ;OperandForceToStack
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStack)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      ?tParmEnd (tParmEnd)
      @OperandPushExpression
       [ (tLiteralInteger)
       | tLiteralInteger:
       oOperandPushInteger
       ] or >
       }
       [ (tParmEnd)
       | *:
       ] or >
       >>
      ;OperandPushExpression
      @OperandForceToStack
       [ oOperandChooseLength (two)
       | two:
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mManifest)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mStack)
       ] or >
       >>
      ;OperandForceToStack
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStack)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      ?tParmEnd (tParmEnd)
      ?tTrap (tTrap)
      oOperandPushTrap
      oEmitSingle(iCall)
      oOperandPop
      oOperandPushMode(mStackReg)
      oOperandSetLength(two)
      oOperandPushMode(mManifest)
      oOperandSetLength(two)
      oOperandSetValue(twelve)
      oEmitDouble(iAdd)
      oOperandPop
      oOperandPop
      >>
     ;WriteParameter
     }
     [ (tWriteEnd)
     | tWriteEnd:
     ] or >
     >>
    ;WriteProc
    ] or >
    }
    [ (tTrapBegin)
    | tTrapBegin:
    @TrapStmt
     oEmitSourceCoordinate
     [ (tLiteralAddress)
     | tLiteralAddress:
     @OperandPushVariable
      oOperandPushVariable
      [ (tVarParm)
      | *:
      [ (tVarParm)
      | *:
      [ (tVarParm)
      | *:
      >>
     ;OperandPushVariable
     oOperandPushCopy
     @OperandForceToStack
      [ oOperandChooseLength (two)
      | two:
      oEmitSingle(iPush)
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStatic)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      oOperandPushMode(mStack)
      ] or >
      >>
     ;OperandForceToStack
     oOperandPop
     ?tVarParm (tVarParm)
     ?tParmEnd (tParmEnd)
     [ (tTrap)
     | tTrap:
     @OperandPopAndFreeTemp
      [ oOperandChooseMode (mStatic)
      | *:
      oOperandPop
      >>
     ;OperandPopAndFreeTemp
     oOperandPushTrap
     oEmitSingle(iCall)
     oOperandPop
     oOperandPushMode(mStackReg)
     oOperandSetLength(two)
     oOperandPushMode(mManifest)
     oOperandSetLength(two)
     oOperandSetValue(four)
     oEmitDouble(iAdd)
     oOperandPop
     oOperandPop
     ] or >
     ] or >
     >>
    ;TrapStmt
    ] or >
    }
    [ (tReadBegin)
    | tReadBegin:
    @ReadProc
     oEmitSourceCoordinate
     [ (tTrapBegin)
     | *:
     @ReadParameter
      ?tTrapBegin (tTrapBegin)
      ?tLiteralAddress (tLiteralAddress)
      @OperandPushVariable
       oOperandPushVariable
       [ (tVarParm)
       | *:
       [ (tVarParm)
       | *:
       [ (tVarParm)
       | *:
       >>
      ;OperandPushVariable
      @OperandForceToStack
       [ oOperandChooseLength (two)
       | two:
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStatic)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mStack)
       ] or >
       >>
      ;OperandForceToStack
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStack)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      ?tVarParm (tVarParm)
      ?tParmEnd (tParmEnd)
      ?tLiteralAddress (tLiteralAddress)
      @OperandPushVariable
       oOperandPushVariable
       [ (tVarParm)
       | *:
       [ (tVarParm)
       | *:
       [ (tVarParm)
       | *:
       >>
      ;OperandPushVariable
      @OperandForceAddressIntoTemp
       [ oOperandChooseMode (mStatic)
       | mStatic:
       @OperandPushTempWord
        oTempAllocate
        oOperandPushTemp
        oOperandSetValue(zero)
        oOperandSetLength(two)
        >>
       ;OperandPushTempWord
       oOperandSwap
       oEmitDouble(iLoada)
       oOperandPop
       ] or >
       oOperandSetLength(two)
       >>
      ;OperandForceAddressIntoTemp
      @OperandForceToStack
       [ oOperandChooseLength (two)
       | two:
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mTemp)
        | mTemp:
        oTempFree
        ] or >
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mStack)
       ] or >
       >>
      ;OperandForceToStack
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStack)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      ?tVarParm (tVarParm)
      ?tParmEnd (tParmEnd)
      oOperandPushMode(mManifest)
      oOperandSetLength(two)
      oOperandSetValue(eight)
      [ (tTrap)
      | tTrap:
      ] or >
      oOperandPushTrap
      oEmitSingle(iCall)
      oOperandPop
      oOperandPushMode(mStackReg)
      oOperandSetLength(two)
      oOperandSwap
      oEmitDouble(iAdd)
      oOperandPop
      oOperandPop
      >>
     ;ReadParameter
     }
     [ (tReadEnd)
     | tReadEnd:
     ] or >
     >>
    ;ReadProc
    ] or >
    }
    [ (tWriteBegin)
    | tWriteBegin:
    @WriteProc
     oEmitSourceCoordinate
     [ (tTrapBegin)
     | *:
     @WriteParameter
      ?tTrapBegin (tTrapBegin)
      ?tLiteralAddress (tLiteralAddress)
      @OperandPushVariable
       oOperandPushVariable
       [ (tVarParm)
       | *:
       [ (tVarParm)
       | *:
       [ (tVarParm)
       | *:
       >>
      ;OperandPushVariable
      @OperandForceToStack
       [ oOperandChooseLength (two)
       | two:
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStatic)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mStack)
       ] or >
       >>
      ;OperandForceToStack
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStack)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      ?tVarParm (tVarParm)
      ?tParmEnd (tParmEnd)
      @OperandPushExpression
       [ (tLiteralString)
       | tLiteralString:
       oEmitNone(iData)
       oEmitString
       oEmitNone(iText)
       oOperandPushString
       @EmitStringDescriptor
        @OperandForceAddressIntoTemp
         [ oOperandChooseMode (mString)
         | mString:
         @OperandPushTempWord
          oTempAllocate
          oOperandPushTemp
          oOperandSetValue(zero)
          oOperandSetLength(two)
          >>
         ;OperandPushTempWord
         oOperandSwap
         oEmitDouble(iLoada)
         oOperandPop
         ] or >
         oOperandSetLength(two)
         >>
        ;OperandForceAddressIntoTemp
        >>
       ;EmitStringDescriptor
       ] or >
       }
       [ (tParmEnd)
       | *:
       ] or >
       >>
      ;OperandPushExpression
      [ (tParmEnd)
      | *:
      @OperandForceToStack
       [ oOperandChooseLength (two)
       | two:
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mTemp)
        | mTemp:
        oTempFree
        ] or >
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mStack)
       ] or >
       >>
      ;OperandForceToStack
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStack)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      ?tParmEnd (tParmEnd)
      @OperandPushExpression
       [ (tLiteralInteger)
       | tLiteralInteger:
       oOperandPushInteger
       ] or >
       }
       [ (tParmEnd)
       | *:
       ] or >
       >>
      ;OperandPushExpression
      @OperandForceToStack
       [ oOperandChooseLength (two)
       | two:
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mManifest)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mStack)
       ] or >
       >>
      ;OperandForceToStack
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStack)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      ?tParmEnd (tParmEnd)
      ?tTrap (tTrap)
      oOperandPushTrap
      oEmitSingle(iCall)
      oOperandPop
      oOperandPushMode(mStackReg)
      oOperandSetLength(two)
      oOperandPushMode(mManifest)
      oOperandSetLength(two)
      oOperandSetValue(twelve)
      oEmitDouble(iAdd)
      oOperandPop
      oOperandPop
      >>
     ;WriteParameter
     }
     [ (tWriteEnd)
     | tWriteEnd:
     ] or >
     >>
    ;WriteProc
    ] or >
    }
    [ (tTrapBegin)
    | tTrapBegin:
    @TrapStmt
     oEmitSourceCoordinate
     [ (tLiteralAddress)
     | tLiteralAddress:
     @OperandPushVariable
      oOperandPushVariable
      [ (tVarParm)
      | *:
      [ (tVarParm)
      | *:
      [ (tVarParm)
      | *:
      >>
     ;OperandPushVariable
     oOperandPushCopy
     @OperandForceToStack
      [ oOperandChooseLength (two)
      | two:
      oEmitSingle(iPush)
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStatic)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      oOperandPushMode(mStack)
      ] or >
      >>
     ;OperandForceToStack
     oOperandPop
     ?tVarParm (tVarParm)
     ?tParmEnd (tParmEnd)
     [ (tTrap)
     | tTrap:
     @OperandPopAndFreeTemp
      [ oOperandChooseMode (mStatic)
      | *:
      oOperandPop
      >>
     ;OperandPopAndFreeTemp
     oOperandPushTrap
     oEmitSingle(iCall)
     oOperandPop
     oOperandPushMode(mStackReg)
     oOperandSetLength(two)
     oOperandPushMode(mManifest)
     oOperandSetLength(two)
     oOperandSetValue(four)
     oEmitDouble(iAdd)
     oOperandPop
     oOperandPop
     ] or >
     ] or >
     >>
    ;TrapStmt
    ] or >
    }
    [ (tAssignBegin)
    | tAssignBegin:
    @AssignStmt
     oEmitSourceCoordinate
     ?tLiteralAddress (tLiteralAddress)
     @OperandPushVariable
      oOperandPushVariable
      [ (tLiteralAddress)
      | *:
      [ (tLiteralAddress)
      | *:
      [ (tLiteralAddress)
      | *:
      >>
     ;OperandPushVariable
     @OperandPushExpressionAssignPopPop
      [ (tLiteralAddress)
      | tLiteralAddress:
      @OperandPushVariable
       oOperandPushVariable
       [ (tFetchString)
       | *:
       [ (tFetchString)
       | *:
       [ (tFetchString)
       | tFetchString:
       oOperandSetLength(regCX)
       ] or >
       >>
      ;OperandPushVariable
      ] or >
      }
      [ (tLiteralInteger)
      | tLiteralInteger:
      oOperandPushInteger
      ] or >
      }
      [ (tLiteralAddress)
      | tLiteralAddress:
      @OperandPushVariable
       oOperandPushVariable
       [ (tFetchString)
       | *:
       [ (tFetchString)
       | *:
       [ (tFetchString)
       | tFetchString:
       oOperandSetLength(regCX)
       ] or >
       >>
      ;OperandPushVariable
      ] or >
      }
      [ (tLength)
      | tLength:
      @OperandLength
       @SaveTempRegsToStack
        oOperandPushMode(mTemp)
        oOperandSetLength(two)
        oOperandSetRegnum(one)
        oEmitSingle(iPush)
        oOperandSetRegnum(two)
        oEmitSingle(iPush)
        oOperandSetRegnum(regCX)
        oEmitSingle(iPush)
        oOperandSetRegnum(four)
        oEmitSingle(iPush)
        oOperandPop
        >>
       ;SaveTempRegsToStack
       @OperandPushTempWord
        oTempAllocate
        oOperandPushTemp
        oOperandSetValue(zero)
        oOperandSetLength(two)
        >>
       ;OperandPushTempWord
       oOperandSwap
       [ oOperandChooseMode (mStatic)
       | *:
       oEmitDouble(iLoada)
       oOperandSwap
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mTemp)
        | mTemp:
        oTempFree
        ] or >
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStatic)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mTrap)
       oOperandSetValue(trLength)
       oOperandSetLength(two)
       oEmitSingle(iCall)
       oOperandPop
       oOperandPushMode(mStackReg)
       oOperandSetLength(two)
       oOperandPushMode(mManifest)
       oOperandSetLength(two)
       oOperandSetValue(four)
       oEmitDouble(iAdd)
       oOperandPop
       oOperandPop
       oOperandPushMode(mScratchReg1)
       oOperandSetLength(two)
       oOperandPushMode(mResultReg)
       oOperandSetLength(two)
       oEmitDouble(iMov)
       oOperandPop
       @RestoreTempRegsFromStack
        oOperandPushMode(mTemp)
        oOperandSetLength(two)
        oOperandSetRegnum(four)
        oEmitSingle(iPop)
        oOperandSetRegnum(regCX)
        oEmitSingle(iPop)
        oOperandSetRegnum(two)
        oEmitSingle(iPop)
        oOperandSetRegnum(one)
        oEmitSingle(iPop)
        oOperandPop
        >>
       ;RestoreTempRegsFromStack
       @OperandForceIntoTemp
        [ oOperandChooseMode (mScratchReg1)
        | *:
        [ oOperandChooseLength (two)
        | two:
        @OperandPushTempWord
         oTempAllocate
         oOperandPushTemp
         oOperandSetValue(zero)
         oOperandSetLength(two)
         >>
        ;OperandPushTempWord
        ] or >
        oOperandSwap
        oEmitDouble(iMov)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mScratchReg1)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandSetMode(mTemp)
        >>
       ;OperandForceIntoTemp
       >>
      ;OperandLength
      ] or >
      }
      [ (tLiteralInteger)
      | tLiteralInteger:
      oOperandPushInteger
      ] or >
      }
      [ (tSubtract)
      | tSubtract:
      [ (tSubstring)
      | *:
      @OperandSubtractPop
       @OperandAreLeftAndRightManifest
        [ oOperandChooseMode (mManifest)
        | mManifest:
        oOperandSwap
        [ oOperandChooseMode (mTemp)
        | *:
        oOperandSwap
        >>no
       ;OperandAreLeftAndRightManifest
       [@OperandAreLeftAndRightManifest (no)
       | no:
       [ oOperandChooseManifestValue (two)
       | *:
       @OperandForceLeftIntoTemp
        oOperandSwap
        [ oOperandChooseMode (mTemp)
        | mTemp:
        oOperandSwap
        ] or >
        >>
       ;OperandForceLeftIntoTemp
       oEmitDouble(iSub)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mManifest)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       ] or >
       >>
      ;OperandSubtractPop
      ] or >
      }
      [ (tSubstring)
      | tSubstring:
      @OperandSubstringPopPop
       @SaveTempRegsToStack
        oOperandPushMode(mTemp)
        oOperandSetLength(two)
        oOperandSetRegnum(one)
        oEmitSingle(iPush)
        oOperandSetRegnum(two)
        oEmitSingle(iPush)
        oOperandSetRegnum(regCX)
        oEmitSingle(iPush)
        oOperandSetRegnum(four)
        oEmitSingle(iPush)
        oOperandPop
        >>
       ;SaveTempRegsToStack
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mTemp)
        | mTemp:
        oTempFree
        ] or >
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mManifest)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       @OperandPushTempWord
        oTempAllocate
        oOperandPushTemp
        oOperandSetValue(zero)
        oOperandSetLength(two)
        >>
       ;OperandPushTempWord
       oOperandSwap
       [ oOperandChooseMode (mStatic)
       | *:
       oEmitDouble(iLoada)
       oOperandSwap
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mTemp)
        | mTemp:
        oTempFree
        ] or >
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStatic)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mTrap)
       oOperandSetValue(trSubstring)
       oOperandSetLength(two)
       oEmitSingle(iCall)
       oOperandPop
       oOperandPushMode(mStackReg)
       oOperandSetLength(two)
       oOperandPushMode(mManifest)
       oOperandSetLength(two)
       oOperandSetValue(twelve)
       oEmitDouble(iAdd)
       oOperandPop
       oOperandPop
       oOperandPushMode(mScratchReg1)
       oOperandSetLength(two)
       oOperandPushMode(mResultReg)
       oOperandSetLength(two)
       oEmitDouble(iMov)
       oOperandPop
       @RestoreTempRegsFromStack
        oOperandPushMode(mTemp)
        oOperandSetLength(two)
        oOperandSetRegnum(four)
        oEmitSingle(iPop)
        oOperandSetRegnum(regCX)
        oEmitSingle(iPop)
        oOperandSetRegnum(two)
        oEmitSingle(iPop)
        oOperandSetRegnum(one)
        oEmitSingle(iPop)
        oOperandPop
        >>
       ;RestoreTempRegsFromStack
       @OperandForceIntoTemp
        [ oOperandChooseMode (mScratchReg1)
        | *:
        [ oOperandChooseLength (two)
        | two:
        @OperandPushTempWord
         oTempAllocate
         oOperandPushTemp
         oOperandSetValue(zero)
         oOperandSetLength(two)
         >>
        ;OperandPushTempWord
        ] or >
        oOperandSwap
        oEmitDouble(iMov)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mScratchReg1)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandSetMode(mTemp)
        >>
       ;OperandForceIntoTemp
       >>
      ;OperandSubstringPopPop
      ] or >
      }
      [ (tAssignString)
      | tAssignString:
      @OperandAssignStringPopPop
       @SaveTempRegsToStack
        oOperandPushMode(mTemp)
        oOperandSetLength(two)
        oOperandSetRegnum(one)
        oEmitSingle(iPush)
        oOperandSetRegnum(two)
        oEmitSingle(iPush)
        oOperandSetRegnum(regCX)
        oEmitSingle(iPush)
        oOperandSetRegnum(four)
        oEmitSingle(iPush)
        oOperandPop
        >>
       ;SaveTempRegsToStack
       @OperandPushTempWord
        oTempAllocate
        oOperandPushTemp
        oOperandSetValue(zero)
        oOperandSetLength(two)
        >>
       ;OperandPushTempWord
       oOperandSwap
       [ oOperandChooseMode (mTemp)
       | mTemp:
       oEmitDouble(iMov)
       ] or >
       oOperandSwap
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mTemp)
        | mTemp:
        oTempFree
        ] or >
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mTemp)
        | mTemp:
        oTempFree
        ] or >
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       @OperandPushTempWord
        oTempAllocate
        oOperandPushTemp
        oOperandSetValue(zero)
        oOperandSetLength(two)
        >>
       ;OperandPushTempWord
       oOperandSwap
       [ oOperandChooseMode (mStatic)
       | *:
       oEmitDouble(iLoada)
       oOperandSwap
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mTemp)
        | mTemp:
        oTempFree
        ] or >
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStatic)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mTrap)
       oOperandSetValue(trAssignString)
       oOperandSetLength(two)
       oEmitSingle(iCall)
       oOperandPop
       oOperandPushMode(mStackReg)
       oOperandSetLength(two)
       oOperandPushMode(mManifest)
       oOperandSetLength(two)
       oOperandSetValue(eight)
       oEmitDouble(iAdd)
       oOperandPop
       oOperandPop
       @RestoreTempRegsFromStack
        oOperandPushMode(mTemp)
        oOperandSetLength(two)
        oOperandSetRegnum(four)
        oEmitSingle(iPop)
        oOperandSetRegnum(regCX)
        oEmitSingle(iPop)
        oOperandSetRegnum(two)
        oEmitSingle(iPop)
        oOperandSetRegnum(one)
        oEmitSingle(iPop)
        oOperandPop
        >>
       ;RestoreTempRegsFromStack
       >>
      ;OperandAssignStringPopPop
      ] or >
      >>
     ;OperandPushExpressionAssignPopPop
     >>
    ;AssignStmt
    ] or >
    }
    [ (tWriteBegin)
    | tWriteBegin:
    @WriteProc
     oEmitSourceCoordinate
     [ (tTrapBegin)
     | *:
     @WriteParameter
      ?tTrapBegin (tTrapBegin)
      ?tLiteralAddress (tLiteralAddress)
      @OperandPushVariable
       oOperandPushVariable
       [ (tVarParm)
       | *:
       [ (tVarParm)
       | *:
       [ (tVarParm)
       | *:
       >>
      ;OperandPushVariable
      @OperandForceToStack
       [ oOperandChooseLength (two)
       | two:
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStatic)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mStack)
       ] or >
       >>
      ;OperandForceToStack
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStack)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      ?tVarParm (tVarParm)
      ?tParmEnd (tParmEnd)
      @OperandPushExpression
       [ (tLiteralString)
       | tLiteralString:
       oEmitNone(iData)
       oEmitString
       oEmitNone(iText)
       oOperandPushString
       @EmitStringDescriptor
        @OperandForceAddressIntoTemp
         [ oOperandChooseMode (mString)
         | mString:
         @OperandPushTempWord
          oTempAllocate
          oOperandPushTemp
          oOperandSetValue(zero)
          oOperandSetLength(two)
          >>
         ;OperandPushTempWord
         oOperandSwap
         oEmitDouble(iLoada)
         oOperandPop
         ] or >
         oOperandSetLength(two)
         >>
        ;OperandForceAddressIntoTemp
        >>
       ;EmitStringDescriptor
       ] or >
       }
       [ (tParmEnd)
       | *:
       ] or >
       >>
      ;OperandPushExpression
      [ (tParmEnd)
      | *:
      @OperandForceToStack
       [ oOperandChooseLength (two)
       | two:
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mTemp)
        | mTemp:
        oTempFree
        ] or >
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mStack)
       ] or >
       >>
      ;OperandForceToStack
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStack)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      ?tParmEnd (tParmEnd)
      @OperandPushExpression
       [ (tLiteralInteger)
       | tLiteralInteger:
       oOperandPushInteger
       ] or >
       }
       [ (tParmEnd)
       | *:
       ] or >
       >>
      ;OperandPushExpression
      @OperandForceToStack
       [ oOperandChooseLength (two)
       | two:
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mManifest)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mStack)
       ] or >
       >>
      ;OperandForceToStack
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStack)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      ?tParmEnd (tParmEnd)
      ?tTrap (tTrap)
      oOperandPushTrap
      oEmitSingle(iCall)
      oOperandPop
      oOperandPushMode(mStackReg)
      oOperandSetLength(two)
      oOperandPushMode(mManifest)
      oOperandSetLength(two)
      oOperandSetValue(twelve)
      oEmitDouble(iAdd)
      oOperandPop
      oOperandPop
      >>
     ;WriteParameter
     }
     [ (tTrapBegin)
     | *:
     @WriteParameter
      ?tTrapBegin (tTrapBegin)
      ?tLiteralAddress (tLiteralAddress)
      @OperandPushVariable
       oOperandPushVariable
       [ (tVarParm)
       | *:
       [ (tVarParm)
       | *:
       [ (tVarParm)
       | *:
       >>
      ;OperandPushVariable
      @OperandForceToStack
       [ oOperandChooseLength (two)
       | two:
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStatic)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mStack)
       ] or >
       >>
      ;OperandForceToStack
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStack)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      ?tVarParm (tVarParm)
      ?tParmEnd (tParmEnd)
      @OperandPushExpression
       [ (tLiteralAddress)
       | tLiteralAddress:
       @OperandPushVariable
        oOperandPushVariable
        [ (tFetchString)
        | *:
        [ (tFetchString)
        | *:
        [ (tFetchString)
        | tFetchString:
        oOperandSetLength(regCX)
        ] or >
        >>
       ;OperandPushVariable
       ] or >
       }
       [ (tParmEnd)
       | *:
       ] or >
       >>
      ;OperandPushExpression
      [ (tParmEnd)
      | *:
      @OperandForceToStack
       [ oOperandChooseLength (regCX)
       | regCX:
       @OperandPushTempWord
        oTempAllocate
        oOperandPushTemp
        oOperandSetValue(zero)
        oOperandSetLength(two)
        >>
       ;OperandPushTempWord
       oOperandSwap
       [ oOperandChooseMode (mStatic)
       | *:
       oEmitDouble(iLoada)
       oOperandSwap
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mTemp)
        | mTemp:
        oTempFree
        ] or >
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       ] or >
       >>
      ;OperandForceToStack
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStatic)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      ?tParmEnd (tParmEnd)
      @OperandPushExpression
       [ (tLiteralInteger)
       | tLiteralInteger:
       oOperandPushInteger
       ] or >
       }
       [ (tParmEnd)
       | *:
       ] or >
       >>
      ;OperandPushExpression
      @OperandForceToStack
       [ oOperandChooseLength (two)
       | two:
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mManifest)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mStack)
       ] or >
       >>
      ;OperandForceToStack
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStack)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      ?tParmEnd (tParmEnd)
      ?tTrap (tTrap)
      oOperandPushTrap
      oEmitSingle(iCall)
      oOperandPop
      oOperandPushMode(mStackReg)
      oOperandSetLength(two)
      oOperandPushMode(mManifest)
      oOperandSetLength(two)
      oOperandSetValue(twelve)
      oEmitDouble(iAdd)
      oOperandPop
      oOperandPop
      >>
     ;WriteParameter
     }
     [ (tTrapBegin)
     | *:
     @WriteParameter
      ?tTrapBegin (tTrapBegin)
      ?tLiteralAddress (tLiteralAddress)
      @OperandPushVariable
       oOperandPushVariable
       [ (tVarParm)
       | *:
       [ (tVarParm)
       | *:
       [ (tVarParm)
       | *:
       >>
      ;OperandPushVariable
      @OperandForceToStack
       [ oOperandChooseLength (two)
       | two:
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStatic)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mStack)
       ] or >
       >>
      ;OperandForceToStack
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStack)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      ?tVarParm (tVarParm)
      ?tParmEnd (tParmEnd)
      @OperandPushExpression
       [ (tLiteralString)
       | tLiteralString:
       oEmitNone(iData)
       oEmitString
       oEmitNone(iText)
       oOperandPushString
       @EmitStringDescriptor
        @OperandForceAddressIntoTemp
         [ oOperandChooseMode (mString)
         | mString:
         @OperandPushTempWord
          oTempAllocate
          oOperandPushTemp
          oOperandSetValue(zero)
          oOperandSetLength(two)
          >>
         ;OperandPushTempWord
         oOperandSwap
         oEmitDouble(iLoada)
         oOperandPop
         ] or >
         oOperandSetLength(two)
         >>
        ;OperandForceAddressIntoTemp
        >>
       ;EmitStringDescriptor
       ] or >
       }
       [ (tParmEnd)
       | *:
       ] or >
       >>
      ;OperandPushExpression
      [ (tParmEnd)
      | *:
      @OperandForceToStack
       [ oOperandChooseLength (two)
       | two:
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mTemp)
        | mTemp:
        oTempFree
        ] or >
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mStack)
       ] or >
       >>
      ;OperandForceToStack
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStack)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      ?tParmEnd (tParmEnd)
      @OperandPushExpression
       [ (tLiteralInteger)
       | tLiteralInteger:
       oOperandPushInteger
       ] or >
       }
       [ (tParmEnd)
       | *:
       ] or >
       >>
      ;OperandPushExpression
      @OperandForceToStack
       [ oOperandChooseLength (two)
       | two:
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mManifest)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mStack)
       ] or >
       >>
      ;OperandForceToStack
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStack)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      ?tParmEnd (tParmEnd)
      ?tTrap (tTrap)
      oOperandPushTrap
      oEmitSingle(iCall)
      oOperandPop
      oOperandPushMode(mStackReg)
      oOperandSetLength(two)
      oOperandPushMode(mManifest)
      oOperandSetLength(two)
      oOperandSetValue(twelve)
      oEmitDouble(iAdd)
      oOperandPop
      oOperandPop
      >>
     ;WriteParameter
     }
     [ (tWriteEnd)
     | tWriteEnd:
     ] or >
     >>
    ;WriteProc
    ] or >
    }
    [ (tTrapBegin)
    | tTrapBegin:
    @TrapStmt
     oEmitSourceCoordinate
     [ (tLiteralAddress)
     | tLiteralAddress:
     @OperandPushVariable
      oOperandPushVariable
      [ (tVarParm)
      | *:
      [ (tVarParm)
      | *:
      [ (tVarParm)
      | *:
      >>
     ;OperandPushVariable
     oOperandPushCopy
     @OperandForceToStack
      [ oOperandChooseLength (two)
      | two:
      oEmitSingle(iPush)
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStatic)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      oOperandPushMode(mStack)
      ] or >
      >>
     ;OperandForceToStack
     oOperandPop
     ?tVarParm (tVarParm)
     ?tParmEnd (tParmEnd)
     [ (tTrap)
     | tTrap:
     @OperandPopAndFreeTemp
      [ oOperandChooseMode (mStatic)
      | *:
      oOperandPop
      >>
     ;OperandPopAndFreeTemp
     oOperandPushTrap
     oEmitSingle(iCall)
     oOperandPop
     oOperandPushMode(mStackReg)
     oOperandSetLength(two)
     oOperandPushMode(mManifest)
     oOperandSetLength(two)
     oOperandSetValue(four)
     oEmitDouble(iAdd)
     oOperandPop
     oOperandPop
     ] or >
     ] or >
     >>
    ;TrapStmt
    ] or >
    }
    [ (tIfBegin)
    | tIfBegin:
    @IfStmt
     oEmitSourceCoordinate
     @OperandPushBooleanControlExpression
      @OperandPushExpression
       [ (tLiteralAddress)
       | tLiteralAddress:
       @OperandPushVariable
        oOperandPushVariable
        [ (tFetchString)
        | *:
        [ (tFetchString)
        | *:
        [ (tFetchString)
        | tFetchString:
        oOperandSetLength(regCX)
        ] or >
        >>
       ;OperandPushVariable
       ] or >
       }
       [ (tLiteralAddress)
       | tLiteralAddress:
       @OperandPushVariable
        oOperandPushVariable
        [ (tFetchString)
        | *:
        [ (tFetchString)
        | *:
        [ (tFetchString)
        | tFetchString:
        oOperandSetLength(regCX)
        ] or >
        >>
       ;OperandPushVariable
       ] or >
       }
       [ (tLength)
       | tLength:
       @OperandLength
        @SaveTempRegsToStack
         oOperandPushMode(mTemp)
         oOperandSetLength(two)
         oOperandSetRegnum(one)
         oEmitSingle(iPush)
         oOperandSetRegnum(two)
         oEmitSingle(iPush)
         oOperandSetRegnum(regCX)
         oEmitSingle(iPush)
         oOperandSetRegnum(four)
         oEmitSingle(iPush)
         oOperandPop
         >>
        ;SaveTempRegsToStack
        @OperandPushTempWord
         oTempAllocate
         oOperandPushTemp
         oOperandSetValue(zero)
         oOperandSetLength(two)
         >>
        ;OperandPushTempWord
        oOperandSwap
        [ oOperandChooseMode (mStatic)
        | *:
        oEmitDouble(iLoada)
        oOperandSwap
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mTemp)
         | mTemp:
         oTempFree
         ] or >
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mStatic)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mTrap)
        oOperandSetValue(trLength)
        oOperandSetLength(two)
        oEmitSingle(iCall)
        oOperandPop
        oOperandPushMode(mStackReg)
        oOperandSetLength(two)
        oOperandPushMode(mManifest)
        oOperandSetLength(two)
        oOperandSetValue(four)
        oEmitDouble(iAdd)
        oOperandPop
        oOperandPop
        oOperandPushMode(mScratchReg1)
        oOperandSetLength(two)
        oOperandPushMode(mResultReg)
        oOperandSetLength(two)
        oEmitDouble(iMov)
        oOperandPop
        @RestoreTempRegsFromStack
         oOperandPushMode(mTemp)
         oOperandSetLength(two)
         oOperandSetRegnum(four)
         oEmitSingle(iPop)
         oOperandSetRegnum(regCX)
         oEmitSingle(iPop)
         oOperandSetRegnum(two)
         oEmitSingle(iPop)
         oOperandSetRegnum(one)
         oEmitSingle(iPop)
         oOperandPop
         >>
        ;RestoreTempRegsFromStack
        @OperandForceIntoTemp
         [ oOperandChooseMode (mScratchReg1)
         | *:
         [ oOperandChooseLength (two)
         | two:
         @OperandPushTempWord
          oTempAllocate
          oOperandPushTemp
          oOperandSetValue(zero)
          oOperandSetLength(two)
          >>
         ;OperandPushTempWord
         ] or >
         oOperandSwap
         oEmitDouble(iMov)
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mScratchReg1)
          | *:
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandSetMode(mTemp)
         >>
        ;OperandForceIntoTemp
        >>
       ;OperandLength
       ] or >
       }
       [ (tLiteralInteger)
       | tLiteralInteger:
       oOperandPushInteger
       ] or >
       }
       [ (tSubtract)
       | tSubtract:
       @OperandSubtractPop
        @OperandAreLeftAndRightManifest
         [ oOperandChooseMode (mManifest)
         | mManifest:
         oOperandSwap
         [ oOperandChooseMode (mTemp)
         | *:
         oOperandSwap
         >>no
        ;OperandAreLeftAndRightManifest
        [@OperandAreLeftAndRightManifest (no)
        | no:
        [ oOperandChooseManifestValue (one)
        | one:
        oOperandPop
        @OperandForceIntoTemp
         [ oOperandChooseMode (mTemp)
         | mTemp:
         ] or >
         >>
        ;OperandForceIntoTemp
        oEmitSingle(iDec)
        ] or >
        ] or >
        >>
       ;OperandSubtractPop
       ] or >
       }
       [ (tLiteralAddress)
       | tLiteralAddress:
       @OperandPushVariable
        oOperandPushVariable
        [ (tFetchString)
        | *:
        [ (tFetchString)
        | *:
        [ (tFetchString)
        | tFetchString:
        oOperandSetLength(regCX)
        ] or >
        >>
       ;OperandPushVariable
       ] or >
       }
       [ (tLength)
       | tLength:
       @OperandLength
        @SaveTempRegsToStack
         oOperandPushMode(mTemp)
         oOperandSetLength(two)
         oOperandSetRegnum(one)
         oEmitSingle(iPush)
         oOperandSetRegnum(two)
         oEmitSingle(iPush)
         oOperandSetRegnum(regCX)
         oEmitSingle(iPush)
         oOperandSetRegnum(four)
         oEmitSingle(iPush)
         oOperandPop
         >>
        ;SaveTempRegsToStack
        @OperandPushTempWord
         oTempAllocate
         oOperandPushTemp
         oOperandSetValue(zero)
         oOperandSetLength(two)
         >>
        ;OperandPushTempWord
        oOperandSwap
        [ oOperandChooseMode (mStatic)
        | *:
        oEmitDouble(iLoada)
        oOperandSwap
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mTemp)
         | mTemp:
         oTempFree
         ] or >
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mStatic)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mTrap)
        oOperandSetValue(trLength)
        oOperandSetLength(two)
        oEmitSingle(iCall)
        oOperandPop
        oOperandPushMode(mStackReg)
        oOperandSetLength(two)
        oOperandPushMode(mManifest)
        oOperandSetLength(two)
        oOperandSetValue(four)
        oEmitDouble(iAdd)
        oOperandPop
        oOperandPop
        oOperandPushMode(mScratchReg1)
        oOperandSetLength(two)
        oOperandPushMode(mResultReg)
        oOperandSetLength(two)
        oEmitDouble(iMov)
        oOperandPop
        @RestoreTempRegsFromStack
         oOperandPushMode(mTemp)
         oOperandSetLength(two)
         oOperandSetRegnum(four)
         oEmitSingle(iPop)
         oOperandSetRegnum(regCX)
         oEmitSingle(iPop)
         oOperandSetRegnum(two)
         oEmitSingle(iPop)
         oOperandSetRegnum(one)
         oEmitSingle(iPop)
         oOperandPop
         >>
        ;RestoreTempRegsFromStack
        @OperandForceIntoTemp
         [ oOperandChooseMode (mScratchReg1)
         | *:
         [ oOperandChooseLength (two)
         | two:
         @OperandPushTempWord
          oTempAllocate
          oOperandPushTemp
          oOperandSetValue(zero)
          oOperandSetLength(two)
          >>
         ;OperandPushTempWord
         ] or >
         oOperandSwap
         oEmitDouble(iMov)
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mScratchReg1)
          | *:
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandSetMode(mTemp)
         >>
        ;OperandForceIntoTemp
        >>
       ;OperandLength
       ] or >
       }
       [ (tSubstring)
       | tSubstring:
       @OperandSubstringPopPop
        @SaveTempRegsToStack
         oOperandPushMode(mTemp)
         oOperandSetLength(two)
         oOperandSetRegnum(one)
         oEmitSingle(iPush)
         oOperandSetRegnum(two)
         oEmitSingle(iPush)
         oOperandSetRegnum(regCX)
         oEmitSingle(iPush)
         oOperandSetRegnum(four)
         oEmitSingle(iPush)
         oOperandPop
         >>
        ;SaveTempRegsToStack
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mTemp)
         | mTemp:
         oTempFree
         ] or >
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mTemp)
         | mTemp:
         oTempFree
         ] or >
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        @OperandPushTempWord
         oTempAllocate
         oOperandPushTemp
         oOperandSetValue(zero)
         oOperandSetLength(two)
         >>
        ;OperandPushTempWord
        oOperandSwap
        [ oOperandChooseMode (mStatic)
        | *:
        oEmitDouble(iLoada)
        oOperandSwap
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mTemp)
         | mTemp:
         oTempFree
         ] or >
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mStatic)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mTrap)
        oOperandSetValue(trSubstring)
        oOperandSetLength(two)
        oEmitSingle(iCall)
        oOperandPop
        oOperandPushMode(mStackReg)
        oOperandSetLength(two)
        oOperandPushMode(mManifest)
        oOperandSetLength(two)
        oOperandSetValue(twelve)
        oEmitDouble(iAdd)
        oOperandPop
        oOperandPop
        oOperandPushMode(mScratchReg1)
        oOperandSetLength(two)
        oOperandPushMode(mResultReg)
        oOperandSetLength(two)
        oEmitDouble(iMov)
        oOperandPop
        @RestoreTempRegsFromStack
         oOperandPushMode(mTemp)
         oOperandSetLength(two)
         oOperandSetRegnum(four)
         oEmitSingle(iPop)
         oOperandSetRegnum(regCX)
         oEmitSingle(iPop)
         oOperandSetRegnum(two)
         oEmitSingle(iPop)
         oOperandSetRegnum(one)
         oEmitSingle(iPop)
         oOperandPop
         >>
        ;RestoreTempRegsFromStack
        @OperandForceIntoTemp
         [ oOperandChooseMode (mScratchReg1)
         | *:
         [ oOperandChooseLength (two)
         | two:
         @OperandPushTempWord
          oTempAllocate
          oOperandPushTemp
          oOperandSetValue(zero)
          oOperandSetLength(two)
          >>
         ;OperandPushTempWord
         ] or >
         oOperandSwap
         oEmitDouble(iMov)
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mScratchReg1)
          | *:
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandSetMode(mTemp)
         >>
        ;OperandForceIntoTemp
        >>
       ;OperandSubstringPopPop
       ] or >
       }
       [ (tLiteralString)
       | tLiteralString:
       oEmitNone(iData)
       oEmitString
       oEmitNone(iText)
       oOperandPushString
       @EmitStringDescriptor
        @OperandForceAddressIntoTemp
         [ oOperandChooseMode (mString)
         | mString:
         @OperandPushTempWord
          oTempAllocate
          oOperandPushTemp
          oOperandSetValue(zero)
          oOperandSetLength(two)
          >>
         ;OperandPushTempWord
         oOperandSwap
         oEmitDouble(iLoada)
         oOperandPop
         ] or >
         oOperandSetLength(two)
         >>
        ;OperandForceAddressIntoTemp
        >>
       ;EmitStringDescriptor
       ] or >
       }
       [ (tStringEqual)
       | tStringEqual:
       @OperandStringEqualPop
        @SaveTempRegsToStack
         oOperandPushMode(mTemp)
         oOperandSetLength(two)
         oOperandSetRegnum(one)
         oEmitSingle(iPush)
         oOperandSetRegnum(two)
         oEmitSingle(iPush)
         oOperandSetRegnum(regCX)
         oEmitSingle(iPush)
         oOperandSetRegnum(four)
         oEmitSingle(iPush)
         oOperandPop
         >>
        ;SaveTempRegsToStack
        @OperandPushTempWord
         oTempAllocate
         oOperandPushTemp
         oOperandSetValue(zero)
         oOperandSetLength(two)
         >>
        ;OperandPushTempWord
        oOperandSwap
        [ oOperandChooseMode (mTemp)
        | mTemp:
        oEmitDouble(iMov)
        ] or >
        oOperandSwap
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mTemp)
         | mTemp:
         oTempFree
         ] or >
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mTemp)
         | mTemp:
         oTempFree
         ] or >
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        @OperandPushTempWord
         oTempAllocate
         oOperandPushTemp
         oOperandSetValue(zero)
         oOperandSetLength(two)
         >>
        ;OperandPushTempWord
        oOperandSwap
        [ oOperandChooseMode (mTemp)
        | mTemp:
        oEmitDouble(iMov)
        ] or >
        oOperandSwap
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mTemp)
         | mTemp:
         oTempFree
         ] or >
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mTemp)
         | mTemp:
         oTempFree
         ] or >
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mTrap)
        oOperandSetValue(trStringEqual)
        oOperandSetLength(two)
        oEmitSingle(iCall)
        oOperandPop
        oOperandPushMode(mStackReg)
        oOperandSetLength(two)
        oOperandPushMode(mManifest)
        oOperandSetLength(two)
        oOperandSetValue(eight)
        oEmitDouble(iAdd)
        oOperandPop
        oOperandPop
        oOperandPushMode(mScratchReg1)
        oOperandSetLength(two)
        oOperandPushMode(mResultReg)
        oOperandSetLength(two)
        oEmitDouble(iMov)
        oOperandPop
        @RestoreTempRegsFromStack
         oOperandPushMode(mTemp)
         oOperandSetLength(two)
         oOperandSetRegnum(four)
         oEmitSingle(iPop)
         oOperandSetRegnum(regCX)
         oEmitSingle(iPop)
         oOperandSetRegnum(two)
         oEmitSingle(iPop)
         oOperandSetRegnum(one)
         oEmitSingle(iPop)
         oOperandPop
         >>
        ;RestoreTempRegsFromStack
        @OperandForceIntoTemp
         [ oOperandChooseMode (mScratchReg1)
         | *:
         [ oOperandChooseLength (two)
         | two:
         @OperandPushTempWord
          oTempAllocate
          oOperandPushTemp
          oOperandSetValue(zero)
          oOperandSetLength(two)
          >>
         ;OperandPushTempWord
         ] or >
         oOperandSwap
         oEmitDouble(iMov)
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mScratchReg1)
          | *:
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandSetMode(mTemp)
         >>
        ;OperandForceIntoTemp
        >>
       ;OperandStringEqualPop
       ] or >
       }
       [ (tIfThen)
       | *:
       ] or >
       >>
      ;OperandPushExpression
      @OperandForceToJumpCondition
       [ oOperandIsJumpCondition (no)
       | *:
       [ oOperandChooseManifestValue ()
       | *:
       @EmitTst
        [ oOperandChooseLength (two)
        | two:
        oOperandPushMode(mManifest)
        oOperandSetValue(zero)
        oOperandSetLength(two)
        ] or >
        @EmitCmp
         oOperandSwap
         [ oOperandChooseMode (mTemp)
         | *:
         oOperandSwap
         @OperandLeftOrRightIsTemp
          [ oOperandChooseMode (mManifest)
          | *:
          oOperandSwap
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oOperandSwap
          >>yes
         ;OperandLeftOrRightIsTemp
         [@OperandLeftOrRightIsTemp (yes)
         | yes:
         oEmitDouble(iCmp)
         ] or >
         >>
        ;EmitCmp
        oOperandPop
        >>
       ;EmitTst
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mTemp)
        | mTemp:
        oTempFree
        ] or >
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushJumpCondition(iJne)
       >>
      ;OperandForceToJumpCondition
      >>
     ;OperandPushBooleanControlExpression
     ?tIfThen (tIfThen)
     [ oOperandChooseJumpCondition (iJne)
     | *:
     oOperandComplementJumpCondition
     @OperandInfixOr
      @OperandForceToJumpCondition
       [ oOperandIsJumpCondition (yes)
       | yes:
       ] or >
       >>
      ;OperandForceToJumpCondition
      [ oOperandChooseJumpCondition (iJeq)
      | *:
      oEmitConditionalForwardBranch
      oFixAndFreeFalseBranches
      oFixPushLastAddress
      oOperandMergeShuntsWithAddress
      oFixPopAddress
      >>
     ;OperandInfixOr
     @Statements
      [ (tIfBegin)
      | tIfBegin:
      @IfStmt
       oEmitSourceCoordinate
       @OperandPushBooleanControlExpression
        @OperandPushExpression
         [ (tLiteralAddress)
         | tLiteralAddress:
         @OperandPushVariable
          oOperandPushVariable
          [ (tFetchString)
          | *:
          [ (tFetchString)
          | *:
          [ (tFetchString)
          | tFetchString:
          oOperandSetLength(regCX)
          ] or >
          >>
         ;OperandPushVariable
         ] or >
         }
         [ (tLiteralInteger)
         | tLiteralInteger:
         oOperandPushInteger
         ] or >
         }
         [ (tLiteralInteger)
         | tLiteralInteger:
         oOperandPushInteger
         ] or >
         }
         [ (tSubstring)
         | tSubstring:
         @OperandSubstringPopPop
          @SaveTempRegsToStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(one)
           oEmitSingle(iPush)
           oOperandSetRegnum(two)
           oEmitSingle(iPush)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPush)
           oOperandSetRegnum(four)
           oEmitSingle(iPush)
           oOperandPop
           >>
          ;SaveTempRegsToStack
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mManifest)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mManifest)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mStatic)
          | *:
          oEmitDouble(iLoada)
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStatic)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mTrap)
          oOperandSetValue(trSubstring)
          oOperandSetLength(two)
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(twelve)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          oOperandPushMode(mScratchReg1)
          oOperandSetLength(two)
          oOperandPushMode(mResultReg)
          oOperandSetLength(two)
          oEmitDouble(iMov)
          oOperandPop
          @RestoreTempRegsFromStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(four)
           oEmitSingle(iPop)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPop)
           oOperandSetRegnum(two)
           oEmitSingle(iPop)
           oOperandSetRegnum(one)
           oEmitSingle(iPop)
           oOperandPop
           >>
          ;RestoreTempRegsFromStack
          @OperandForceIntoTemp
           [ oOperandChooseMode (mScratchReg1)
           | *:
           [ oOperandChooseLength (two)
           | two:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           ] or >
           oOperandSwap
           oEmitDouble(iMov)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mScratchReg1)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandSetMode(mTemp)
           >>
          ;OperandForceIntoTemp
          >>
         ;OperandSubstringPopPop
         ] or >
         }
         [ (tLiteralString)
         | tLiteralString:
         oEmitNone(iData)
         oEmitString
         oEmitNone(iText)
         oOperandPushString
         @EmitStringDescriptor
          @OperandForceAddressIntoTemp
           [ oOperandChooseMode (mString)
           | mString:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           oOperandSwap
           oEmitDouble(iLoada)
           oOperandPop
           ] or >
           oOperandSetLength(two)
           >>
          ;OperandForceAddressIntoTemp
          >>
         ;EmitStringDescriptor
         ] or >
         }
         [ (tStringEqual)
         | tStringEqual:
         @OperandStringEqualPop
          @SaveTempRegsToStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(one)
           oEmitSingle(iPush)
           oOperandSetRegnum(two)
           oEmitSingle(iPush)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPush)
           oOperandSetRegnum(four)
           oEmitSingle(iPush)
           oOperandPop
           >>
          ;SaveTempRegsToStack
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oEmitDouble(iMov)
          ] or >
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oEmitDouble(iMov)
          ] or >
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mTrap)
          oOperandSetValue(trStringEqual)
          oOperandSetLength(two)
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(eight)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          oOperandPushMode(mScratchReg1)
          oOperandSetLength(two)
          oOperandPushMode(mResultReg)
          oOperandSetLength(two)
          oEmitDouble(iMov)
          oOperandPop
          @RestoreTempRegsFromStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(four)
           oEmitSingle(iPop)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPop)
           oOperandSetRegnum(two)
           oEmitSingle(iPop)
           oOperandSetRegnum(one)
           oEmitSingle(iPop)
           oOperandPop
           >>
          ;RestoreTempRegsFromStack
          @OperandForceIntoTemp
           [ oOperandChooseMode (mScratchReg1)
           | *:
           [ oOperandChooseLength (two)
           | two:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           ] or >
           oOperandSwap
           oEmitDouble(iMov)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mScratchReg1)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandSetMode(mTemp)
           >>
          ;OperandForceIntoTemp
          >>
         ;OperandStringEqualPop
         ] or >
         }
         [ (tInfixOr)
         | tInfixOr:
         @OperandInfixOr
          @OperandForceToJumpCondition
           [ oOperandIsJumpCondition (no)
           | *:
           [ oOperandChooseManifestValue ()
           | *:
           @EmitTst
            [ oOperandChooseLength (two)
            | two:
            oOperandPushMode(mManifest)
            oOperandSetValue(zero)
            oOperandSetLength(two)
            ] or >
            @EmitCmp
             oOperandSwap
             [ oOperandChooseMode (mTemp)
             | *:
             oOperandSwap
             @OperandLeftOrRightIsTemp
              [ oOperandChooseMode (mManifest)
              | *:
              oOperandSwap
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oOperandSwap
              >>yes
             ;OperandLeftOrRightIsTemp
             [@OperandLeftOrRightIsTemp (yes)
             | yes:
             oEmitDouble(iCmp)
             ] or >
             >>
            ;EmitCmp
            oOperandPop
            >>
           ;EmitTst
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oTempFree
            ] or >
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushJumpCondition(iJne)
           >>
          ;OperandForceToJumpCondition
          [ oOperandChooseJumpCondition (iJne)
          | *:
          oEmitConditionalForwardBranch
          oFixAndFreeFalseBranches
          oFixPushLastAddress
          oOperandMergeShuntsWithAddress
          oFixPopAddress
          >>
         ;OperandInfixOr
         ] or >
         }
         [ (tLiteralAddress)
         | tLiteralAddress:
         @OperandPushVariable
          oOperandPushVariable
          [ (tFetchString)
          | *:
          [ (tFetchString)
          | *:
          [ (tFetchString)
          | tFetchString:
          oOperandSetLength(regCX)
          ] or >
          >>
         ;OperandPushVariable
         ] or >
         }
         [ (tLiteralInteger)
         | tLiteralInteger:
         oOperandPushInteger
         ] or >
         }
         [ (tLiteralInteger)
         | tLiteralInteger:
         oOperandPushInteger
         ] or >
         }
         [ (tSubstring)
         | tSubstring:
         @OperandSubstringPopPop
          @SaveTempRegsToStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(one)
           oEmitSingle(iPush)
           oOperandSetRegnum(two)
           oEmitSingle(iPush)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPush)
           oOperandSetRegnum(four)
           oEmitSingle(iPush)
           oOperandPop
           >>
          ;SaveTempRegsToStack
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mManifest)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mManifest)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mStatic)
          | *:
          oEmitDouble(iLoada)
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStatic)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mTrap)
          oOperandSetValue(trSubstring)
          oOperandSetLength(two)
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(twelve)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          oOperandPushMode(mScratchReg1)
          oOperandSetLength(two)
          oOperandPushMode(mResultReg)
          oOperandSetLength(two)
          oEmitDouble(iMov)
          oOperandPop
          @RestoreTempRegsFromStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(four)
           oEmitSingle(iPop)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPop)
           oOperandSetRegnum(two)
           oEmitSingle(iPop)
           oOperandSetRegnum(one)
           oEmitSingle(iPop)
           oOperandPop
           >>
          ;RestoreTempRegsFromStack
          @OperandForceIntoTemp
           [ oOperandChooseMode (mScratchReg1)
           | *:
           [ oOperandChooseLength (two)
           | two:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           ] or >
           oOperandSwap
           oEmitDouble(iMov)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mScratchReg1)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandSetMode(mTemp)
           >>
          ;OperandForceIntoTemp
          >>
         ;OperandSubstringPopPop
         ] or >
         }
         [ (tLiteralString)
         | tLiteralString:
         oEmitNone(iData)
         oEmitString
         oEmitNone(iText)
         oOperandPushString
         @EmitStringDescriptor
          @OperandForceAddressIntoTemp
           [ oOperandChooseMode (mString)
           | mString:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           oOperandSwap
           oEmitDouble(iLoada)
           oOperandPop
           ] or >
           oOperandSetLength(two)
           >>
          ;OperandForceAddressIntoTemp
          >>
         ;EmitStringDescriptor
         ] or >
         }
         [ (tStringEqual)
         | tStringEqual:
         @OperandStringEqualPop
          @SaveTempRegsToStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(one)
           oEmitSingle(iPush)
           oOperandSetRegnum(two)
           oEmitSingle(iPush)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPush)
           oOperandSetRegnum(four)
           oEmitSingle(iPush)
           oOperandPop
           >>
          ;SaveTempRegsToStack
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oEmitDouble(iMov)
          ] or >
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oEmitDouble(iMov)
          ] or >
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mTrap)
          oOperandSetValue(trStringEqual)
          oOperandSetLength(two)
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(eight)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          oOperandPushMode(mScratchReg1)
          oOperandSetLength(two)
          oOperandPushMode(mResultReg)
          oOperandSetLength(two)
          oEmitDouble(iMov)
          oOperandPop
          @RestoreTempRegsFromStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(four)
           oEmitSingle(iPop)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPop)
           oOperandSetRegnum(two)
           oEmitSingle(iPop)
           oOperandSetRegnum(one)
           oEmitSingle(iPop)
           oOperandPop
           >>
          ;RestoreTempRegsFromStack
          @OperandForceIntoTemp
           [ oOperandChooseMode (mScratchReg1)
           | *:
           [ oOperandChooseLength (two)
           | two:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           ] or >
           oOperandSwap
           oEmitDouble(iMov)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mScratchReg1)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandSetMode(mTemp)
           >>
          ;OperandForceIntoTemp
          >>
         ;OperandStringEqualPop
         ] or >
         }
         [ (tOr)
         | tOr:
         @OperandOrPop
          @OperandForceToJumpCondition
           [ oOperandIsJumpCondition (no)
           | *:
           [ oOperandChooseManifestValue ()
           | *:
           @EmitTst
            [ oOperandChooseLength (two)
            | two:
            oOperandPushMode(mManifest)
            oOperandSetValue(zero)
            oOperandSetLength(two)
            ] or >
            @EmitCmp
             oOperandSwap
             [ oOperandChooseMode (mTemp)
             | *:
             oOperandSwap
             @OperandLeftOrRightIsTemp
              [ oOperandChooseMode (mManifest)
              | *:
              oOperandSwap
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oOperandSwap
              >>yes
             ;OperandLeftOrRightIsTemp
             [@OperandLeftOrRightIsTemp (yes)
             | yes:
             oEmitDouble(iCmp)
             ] or >
             >>
            ;EmitCmp
            oOperandPop
            >>
           ;EmitTst
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oTempFree
            ] or >
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushJumpCondition(iJne)
           >>
          ;OperandForceToJumpCondition
          oOperandMergeShunts
          oOperandSwap
          oOperandPop
          >>
         ;OperandOrPop
         ] or >
         }
         [ (tInfixOr)
         | tInfixOr:
         @OperandInfixOr
          @OperandForceToJumpCondition
           [ oOperandIsJumpCondition (yes)
           | yes:
           ] or >
           >>
          ;OperandForceToJumpCondition
          [ oOperandChooseJumpCondition (iJne)
          | *:
          oEmitConditionalForwardBranch
          oFixAndFreeFalseBranches
          oFixPushLastAddress
          oOperandMergeShuntsWithAddress
          oFixPopAddress
          >>
         ;OperandInfixOr
         ] or >
         }
         [ (tLiteralAddress)
         | tLiteralAddress:
         @OperandPushVariable
          oOperandPushVariable
          [ (tFetchString)
          | *:
          [ (tFetchString)
          | *:
          [ (tFetchString)
          | tFetchString:
          oOperandSetLength(regCX)
          ] or >
          >>
         ;OperandPushVariable
         ] or >
         }
         [ (tLiteralInteger)
         | tLiteralInteger:
         oOperandPushInteger
         ] or >
         }
         [ (tLiteralInteger)
         | tLiteralInteger:
         oOperandPushInteger
         ] or >
         }
         [ (tSubstring)
         | tSubstring:
         @OperandSubstringPopPop
          @SaveTempRegsToStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(one)
           oEmitSingle(iPush)
           oOperandSetRegnum(two)
           oEmitSingle(iPush)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPush)
           oOperandSetRegnum(four)
           oEmitSingle(iPush)
           oOperandPop
           >>
          ;SaveTempRegsToStack
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mManifest)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mManifest)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mStatic)
          | *:
          oEmitDouble(iLoada)
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStatic)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mTrap)
          oOperandSetValue(trSubstring)
          oOperandSetLength(two)
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(twelve)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          oOperandPushMode(mScratchReg1)
          oOperandSetLength(two)
          oOperandPushMode(mResultReg)
          oOperandSetLength(two)
          oEmitDouble(iMov)
          oOperandPop
          @RestoreTempRegsFromStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(four)
           oEmitSingle(iPop)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPop)
           oOperandSetRegnum(two)
           oEmitSingle(iPop)
           oOperandSetRegnum(one)
           oEmitSingle(iPop)
           oOperandPop
           >>
          ;RestoreTempRegsFromStack
          @OperandForceIntoTemp
           [ oOperandChooseMode (mScratchReg1)
           | *:
           [ oOperandChooseLength (two)
           | two:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           ] or >
           oOperandSwap
           oEmitDouble(iMov)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mScratchReg1)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandSetMode(mTemp)
           >>
          ;OperandForceIntoTemp
          >>
         ;OperandSubstringPopPop
         ] or >
         }
         [ (tLiteralString)
         | tLiteralString:
         oEmitNone(iData)
         oEmitString
         oEmitNone(iText)
         oOperandPushString
         @EmitStringDescriptor
          @OperandForceAddressIntoTemp
           [ oOperandChooseMode (mString)
           | mString:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           oOperandSwap
           oEmitDouble(iLoada)
           oOperandPop
           ] or >
           oOperandSetLength(two)
           >>
          ;OperandForceAddressIntoTemp
          >>
         ;EmitStringDescriptor
         ] or >
         }
         [ (tStringEqual)
         | tStringEqual:
         @OperandStringEqualPop
          @SaveTempRegsToStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(one)
           oEmitSingle(iPush)
           oOperandSetRegnum(two)
           oEmitSingle(iPush)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPush)
           oOperandSetRegnum(four)
           oEmitSingle(iPush)
           oOperandPop
           >>
          ;SaveTempRegsToStack
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oEmitDouble(iMov)
          ] or >
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oEmitDouble(iMov)
          ] or >
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mTrap)
          oOperandSetValue(trStringEqual)
          oOperandSetLength(two)
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(eight)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          oOperandPushMode(mScratchReg1)
          oOperandSetLength(two)
          oOperandPushMode(mResultReg)
          oOperandSetLength(two)
          oEmitDouble(iMov)
          oOperandPop
          @RestoreTempRegsFromStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(four)
           oEmitSingle(iPop)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPop)
           oOperandSetRegnum(two)
           oEmitSingle(iPop)
           oOperandSetRegnum(one)
           oEmitSingle(iPop)
           oOperandPop
           >>
          ;RestoreTempRegsFromStack
          @OperandForceIntoTemp
           [ oOperandChooseMode (mScratchReg1)
           | *:
           [ oOperandChooseLength (two)
           | two:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           ] or >
           oOperandSwap
           oEmitDouble(iMov)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mScratchReg1)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandSetMode(mTemp)
           >>
          ;OperandForceIntoTemp
          >>
         ;OperandStringEqualPop
         ] or >
         }
         [ (tOr)
         | tOr:
         @OperandOrPop
          @OperandForceToJumpCondition
           [ oOperandIsJumpCondition (no)
           | *:
           [ oOperandChooseManifestValue ()
           | *:
           @EmitTst
            [ oOperandChooseLength (two)
            | two:
            oOperandPushMode(mManifest)
            oOperandSetValue(zero)
            oOperandSetLength(two)
            ] or >
            @EmitCmp
             oOperandSwap
             [ oOperandChooseMode (mTemp)
             | *:
             oOperandSwap
             @OperandLeftOrRightIsTemp
              [ oOperandChooseMode (mManifest)
              | *:
              oOperandSwap
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oOperandSwap
              >>yes
             ;OperandLeftOrRightIsTemp
             [@OperandLeftOrRightIsTemp (yes)
             | yes:
             oEmitDouble(iCmp)
             ] or >
             >>
            ;EmitCmp
            oOperandPop
            >>
           ;EmitTst
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oTempFree
            ] or >
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushJumpCondition(iJne)
           >>
          ;OperandForceToJumpCondition
          oOperandMergeShunts
          oOperandSwap
          oOperandPop
          >>
         ;OperandOrPop
         ] or >
         }
         [ (tInfixOr)
         | tInfixOr:
         @OperandInfixOr
          @OperandForceToJumpCondition
           [ oOperandIsJumpCondition (yes)
           | yes:
           ] or >
           >>
          ;OperandForceToJumpCondition
          [ oOperandChooseJumpCondition (iJne)
          | *:
          oEmitConditionalForwardBranch
          oFixAndFreeFalseBranches
          oFixPushLastAddress
          oOperandMergeShuntsWithAddress
          oFixPopAddress
          >>
         ;OperandInfixOr
         ] or >
         }
         [ (tLiteralAddress)
         | tLiteralAddress:
         @OperandPushVariable
          oOperandPushVariable
          [ (tFetchString)
          | *:
          [ (tFetchString)
          | *:
          [ (tFetchString)
          | tFetchString:
          oOperandSetLength(regCX)
          ] or >
          >>
         ;OperandPushVariable
         ] or >
         }
         [ (tLiteralInteger)
         | tLiteralInteger:
         oOperandPushInteger
         ] or >
         }
         [ (tLiteralInteger)
         | tLiteralInteger:
         oOperandPushInteger
         ] or >
         }
         [ (tSubstring)
         | tSubstring:
         @OperandSubstringPopPop
          @SaveTempRegsToStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(one)
           oEmitSingle(iPush)
           oOperandSetRegnum(two)
           oEmitSingle(iPush)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPush)
           oOperandSetRegnum(four)
           oEmitSingle(iPush)
           oOperandPop
           >>
          ;SaveTempRegsToStack
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mManifest)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mManifest)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mStatic)
          | *:
          oEmitDouble(iLoada)
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStatic)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mTrap)
          oOperandSetValue(trSubstring)
          oOperandSetLength(two)
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(twelve)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          oOperandPushMode(mScratchReg1)
          oOperandSetLength(two)
          oOperandPushMode(mResultReg)
          oOperandSetLength(two)
          oEmitDouble(iMov)
          oOperandPop
          @RestoreTempRegsFromStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(four)
           oEmitSingle(iPop)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPop)
           oOperandSetRegnum(two)
           oEmitSingle(iPop)
           oOperandSetRegnum(one)
           oEmitSingle(iPop)
           oOperandPop
           >>
          ;RestoreTempRegsFromStack
          @OperandForceIntoTemp
           [ oOperandChooseMode (mScratchReg1)
           | *:
           [ oOperandChooseLength (two)
           | two:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           ] or >
           oOperandSwap
           oEmitDouble(iMov)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mScratchReg1)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandSetMode(mTemp)
           >>
          ;OperandForceIntoTemp
          >>
         ;OperandSubstringPopPop
         ] or >
         }
         [ (tLiteralString)
         | tLiteralString:
         oEmitNone(iData)
         oEmitString
         oEmitNone(iText)
         oOperandPushString
         @EmitStringDescriptor
          @OperandForceAddressIntoTemp
           [ oOperandChooseMode (mString)
           | mString:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           oOperandSwap
           oEmitDouble(iLoada)
           oOperandPop
           ] or >
           oOperandSetLength(two)
           >>
          ;OperandForceAddressIntoTemp
          >>
         ;EmitStringDescriptor
         ] or >
         }
         [ (tStringEqual)
         | tStringEqual:
         @OperandStringEqualPop
          @SaveTempRegsToStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(one)
           oEmitSingle(iPush)
           oOperandSetRegnum(two)
           oEmitSingle(iPush)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPush)
           oOperandSetRegnum(four)
           oEmitSingle(iPush)
           oOperandPop
           >>
          ;SaveTempRegsToStack
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oEmitDouble(iMov)
          ] or >
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oEmitDouble(iMov)
          ] or >
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mTrap)
          oOperandSetValue(trStringEqual)
          oOperandSetLength(two)
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(eight)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          oOperandPushMode(mScratchReg1)
          oOperandSetLength(two)
          oOperandPushMode(mResultReg)
          oOperandSetLength(two)
          oEmitDouble(iMov)
          oOperandPop
          @RestoreTempRegsFromStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(four)
           oEmitSingle(iPop)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPop)
           oOperandSetRegnum(two)
           oEmitSingle(iPop)
           oOperandSetRegnum(one)
           oEmitSingle(iPop)
           oOperandPop
           >>
          ;RestoreTempRegsFromStack
          @OperandForceIntoTemp
           [ oOperandChooseMode (mScratchReg1)
           | *:
           [ oOperandChooseLength (two)
           | two:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           ] or >
           oOperandSwap
           oEmitDouble(iMov)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mScratchReg1)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandSetMode(mTemp)
           >>
          ;OperandForceIntoTemp
          >>
         ;OperandStringEqualPop
         ] or >
         }
         [ (tOr)
         | tOr:
         @OperandOrPop
          @OperandForceToJumpCondition
           [ oOperandIsJumpCondition (no)
           | *:
           [ oOperandChooseManifestValue ()
           | *:
           @EmitTst
            [ oOperandChooseLength (two)
            | two:
            oOperandPushMode(mManifest)
            oOperandSetValue(zero)
            oOperandSetLength(two)
            ] or >
            @EmitCmp
             oOperandSwap
             [ oOperandChooseMode (mTemp)
             | *:
             oOperandSwap
             @OperandLeftOrRightIsTemp
              [ oOperandChooseMode (mManifest)
              | *:
              oOperandSwap
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oOperandSwap
              >>yes
             ;OperandLeftOrRightIsTemp
             [@OperandLeftOrRightIsTemp (yes)
             | yes:
             oEmitDouble(iCmp)
             ] or >
             >>
            ;EmitCmp
            oOperandPop
            >>
           ;EmitTst
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oTempFree
            ] or >
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushJumpCondition(iJne)
           >>
          ;OperandForceToJumpCondition
          oOperandMergeShunts
          oOperandSwap
          oOperandPop
          >>
         ;OperandOrPop
         ] or >
         }
         [ (tInfixOr)
         | tInfixOr:
         @OperandInfixOr
          @OperandForceToJumpCondition
           [ oOperandIsJumpCondition (yes)
           | yes:
           ] or >
           >>
          ;OperandForceToJumpCondition
          [ oOperandChooseJumpCondition (iJne)
          | *:
          oEmitConditionalForwardBranch
          oFixAndFreeFalseBranches
          oFixPushLastAddress
          oOperandMergeShuntsWithAddress
          oFixPopAddress
          >>
         ;OperandInfixOr
         ] or >
         }
         [ (tLiteralAddress)
         | tLiteralAddress:
         @OperandPushVariable
          oOperandPushVariable
          [ (tFetchString)
          | *:
          [ (tFetchString)
          | *:
          [ (tFetchString)
          | tFetchString:
          oOperandSetLength(regCX)
          ] or >
          >>
         ;OperandPushVariable
         ] or >
         }
         [ (tLiteralInteger)
         | tLiteralInteger:
         oOperandPushInteger
         ] or >
         }
         [ (tLiteralInteger)
         | tLiteralInteger:
         oOperandPushInteger
         ] or >
         }
         [ (tSubstring)
         | tSubstring:
         @OperandSubstringPopPop
          @SaveTempRegsToStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(one)
           oEmitSingle(iPush)
           oOperandSetRegnum(two)
           oEmitSingle(iPush)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPush)
           oOperandSetRegnum(four)
           oEmitSingle(iPush)
           oOperandPop
           >>
          ;SaveTempRegsToStack
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mManifest)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mManifest)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mStatic)
          | *:
          oEmitDouble(iLoada)
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStatic)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mTrap)
          oOperandSetValue(trSubstring)
          oOperandSetLength(two)
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(twelve)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          oOperandPushMode(mScratchReg1)
          oOperandSetLength(two)
          oOperandPushMode(mResultReg)
          oOperandSetLength(two)
          oEmitDouble(iMov)
          oOperandPop
          @RestoreTempRegsFromStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(four)
           oEmitSingle(iPop)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPop)
           oOperandSetRegnum(two)
           oEmitSingle(iPop)
           oOperandSetRegnum(one)
           oEmitSingle(iPop)
           oOperandPop
           >>
          ;RestoreTempRegsFromStack
          @OperandForceIntoTemp
           [ oOperandChooseMode (mScratchReg1)
           | *:
           [ oOperandChooseLength (two)
           | two:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           ] or >
           oOperandSwap
           oEmitDouble(iMov)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mScratchReg1)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandSetMode(mTemp)
           >>
          ;OperandForceIntoTemp
          >>
         ;OperandSubstringPopPop
         ] or >
         }
         [ (tLiteralString)
         | tLiteralString:
         oEmitNone(iData)
         oEmitString
         oEmitNone(iText)
         oOperandPushString
         @EmitStringDescriptor
          @OperandForceAddressIntoTemp
           [ oOperandChooseMode (mString)
           | mString:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           oOperandSwap
           oEmitDouble(iLoada)
           oOperandPop
           ] or >
           oOperandSetLength(two)
           >>
          ;OperandForceAddressIntoTemp
          >>
         ;EmitStringDescriptor
         ] or >
         }
         [ (tStringEqual)
         | tStringEqual:
         @OperandStringEqualPop
          @SaveTempRegsToStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(one)
           oEmitSingle(iPush)
           oOperandSetRegnum(two)
           oEmitSingle(iPush)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPush)
           oOperandSetRegnum(four)
           oEmitSingle(iPush)
           oOperandPop
           >>
          ;SaveTempRegsToStack
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oEmitDouble(iMov)
          ] or >
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oEmitDouble(iMov)
          ] or >
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mTrap)
          oOperandSetValue(trStringEqual)
          oOperandSetLength(two)
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(eight)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          oOperandPushMode(mScratchReg1)
          oOperandSetLength(two)
          oOperandPushMode(mResultReg)
          oOperandSetLength(two)
          oEmitDouble(iMov)
          oOperandPop
          @RestoreTempRegsFromStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(four)
           oEmitSingle(iPop)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPop)
           oOperandSetRegnum(two)
           oEmitSingle(iPop)
           oOperandSetRegnum(one)
           oEmitSingle(iPop)
           oOperandPop
           >>
          ;RestoreTempRegsFromStack
          @OperandForceIntoTemp
           [ oOperandChooseMode (mScratchReg1)
           | *:
           [ oOperandChooseLength (two)
           | two:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           ] or >
           oOperandSwap
           oEmitDouble(iMov)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mScratchReg1)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandSetMode(mTemp)
           >>
          ;OperandForceIntoTemp
          >>
         ;OperandStringEqualPop
         ] or >
         }
         [ (tOr)
         | tOr:
         @OperandOrPop
          @OperandForceToJumpCondition
           [ oOperandIsJumpCondition (no)
           | *:
           [ oOperandChooseManifestValue ()
           | *:
           @EmitTst
            [ oOperandChooseLength (two)
            | two:
            oOperandPushMode(mManifest)
            oOperandSetValue(zero)
            oOperandSetLength(two)
            ] or >
            @EmitCmp
             oOperandSwap
             [ oOperandChooseMode (mTemp)
             | *:
             oOperandSwap
             @OperandLeftOrRightIsTemp
              [ oOperandChooseMode (mManifest)
              | *:
              oOperandSwap
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oOperandSwap
              >>yes
             ;OperandLeftOrRightIsTemp
             [@OperandLeftOrRightIsTemp (yes)
             | yes:
             oEmitDouble(iCmp)
             ] or >
             >>
            ;EmitCmp
            oOperandPop
            >>
           ;EmitTst
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oTempFree
            ] or >
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushJumpCondition(iJne)
           >>
          ;OperandForceToJumpCondition
          oOperandMergeShunts
          oOperandSwap
          oOperandPop
          >>
         ;OperandOrPop
         ] or >
         }
         [ (tIfThen)
         | *:
         ] or >
         >>
        ;OperandPushExpression
        @OperandForceToJumpCondition
         [ oOperandIsJumpCondition (yes)
         | yes:
         ] or >
         >>
        ;OperandForceToJumpCondition
        >>
       ;OperandPushBooleanControlExpression
       ?tIfThen (tIfThen)
       [ oOperandChooseJumpCondition (iJne)
       | *:
       oOperandComplementJumpCondition
       @OperandInfixOr
        @OperandForceToJumpCondition
         [ oOperandIsJumpCondition (yes)
         | yes:
         ] or >
         >>
        ;OperandForceToJumpCondition
        [ oOperandChooseJumpCondition (iJeq)
        | *:
        oEmitConditionalForwardBranch
        oFixAndFreeFalseBranches
        oFixPushLastAddress
        oOperandMergeShuntsWithAddress
        oFixPopAddress
        >>
       ;OperandInfixOr
       @Statements
        [ (tWriteBegin)
        | tWriteBegin:
        @WriteProc
         oEmitSourceCoordinate
         [ (tTrapBegin)
         | *:
         @WriteParameter
          ?tTrapBegin (tTrapBegin)
          ?tLiteralAddress (tLiteralAddress)
          @OperandPushVariable
           oOperandPushVariable
           [ (tVarParm)
           | *:
           [ (tVarParm)
           | *:
           [ (tVarParm)
           | *:
           >>
          ;OperandPushVariable
          @OperandForceToStack
           [ oOperandChooseLength (two)
           | two:
           oEmitSingle(iPush)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mStatic)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushMode(mStack)
           ] or >
           >>
          ;OperandForceToStack
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStack)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          ?tVarParm (tVarParm)
          ?tParmEnd (tParmEnd)
          @OperandPushExpression
           [ (tLiteralString)
           | tLiteralString:
           oEmitNone(iData)
           oEmitString
           oEmitNone(iText)
           oOperandPushString
           @EmitStringDescriptor
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mString)
             | mString:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            >>
           ;EmitStringDescriptor
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchString)
            | *:
            [ (tFetchString)
            | *:
            [ (tFetchString)
            | tFetchString:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tConcatenate)
           | tConcatenate:
           @OperandConcatenatePop
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandPushTempWord
             oTempAllocate
             oOperandPushTemp
             oOperandSetValue(zero)
             oOperandSetLength(two)
             >>
            ;OperandPushTempWord
            oOperandSwap
            [ oOperandChooseMode (mStatic)
            | *:
            oEmitDouble(iLoada)
            oOperandSwap
            oEmitSingle(iPush)
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mTemp)
             | mTemp:
             oTempFree
             ] or >
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStatic)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandPushTempWord
             oTempAllocate
             oOperandPushTemp
             oOperandSetValue(zero)
             oOperandSetLength(two)
             >>
            ;OperandPushTempWord
            oOperandSwap
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oEmitDouble(iMov)
            ] or >
            oOperandSwap
            oEmitSingle(iPush)
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mTemp)
             | mTemp:
             oTempFree
             ] or >
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mTemp)
             | mTemp:
             oTempFree
             ] or >
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trConcatenate)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(eight)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             ] or >
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             >>
            ;OperandForceIntoTemp
            >>
           ;OperandConcatenatePop
           ] or >
           }
           [ (tLiteralString)
           | tLiteralString:
           oEmitNone(iData)
           oEmitString
           oEmitNone(iText)
           oOperandPushString
           @EmitStringDescriptor
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mString)
             | mString:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            >>
           ;EmitStringDescriptor
           ] or >
           }
           [ (tConcatenate)
           | tConcatenate:
           @OperandConcatenatePop
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandPushTempWord
             oTempAllocate
             oOperandPushTemp
             oOperandSetValue(zero)
             oOperandSetLength(two)
             >>
            ;OperandPushTempWord
            oOperandSwap
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oEmitDouble(iMov)
            ] or >
            oOperandSwap
            oEmitSingle(iPush)
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mTemp)
             | mTemp:
             oTempFree
             ] or >
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mTemp)
             | mTemp:
             oTempFree
             ] or >
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandPushTempWord
             oTempAllocate
             oOperandPushTemp
             oOperandSetValue(zero)
             oOperandSetLength(two)
             >>
            ;OperandPushTempWord
            oOperandSwap
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oEmitDouble(iMov)
            ] or >
            oOperandSwap
            oEmitSingle(iPush)
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mTemp)
             | mTemp:
             oTempFree
             ] or >
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mTemp)
             | mTemp:
             oTempFree
             ] or >
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trConcatenate)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(eight)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             ] or >
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             >>
            ;OperandForceIntoTemp
            >>
           ;OperandConcatenatePop
           ] or >
           }
           [ (tParmEnd)
           | *:
           ] or >
           >>
          ;OperandPushExpression
          [ (tParmEnd)
          | *:
          @OperandForceToStack
           [ oOperandChooseLength (two)
           | two:
           oEmitSingle(iPush)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oTempFree
            ] or >
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushMode(mStack)
           ] or >
           >>
          ;OperandForceToStack
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStack)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          ?tParmEnd (tParmEnd)
          @OperandPushExpression
           [ (tLiteralInteger)
           | tLiteralInteger:
           oOperandPushInteger
           ] or >
           }
           [ (tParmEnd)
           | *:
           ] or >
           >>
          ;OperandPushExpression
          @OperandForceToStack
           [ oOperandChooseLength (two)
           | two:
           oEmitSingle(iPush)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mManifest)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushMode(mStack)
           ] or >
           >>
          ;OperandForceToStack
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStack)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          ?tParmEnd (tParmEnd)
          ?tTrap (tTrap)
          oOperandPushTrap
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(twelve)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          >>
         ;WriteParameter
         }
         [ (tWriteEnd)
         | tWriteEnd:
         ] or >
         >>
        ;WriteProc
        ] or >
        }
        [ (tIfMerge)
        | *:
        ] or >
        >>
       ;Statements
       [ (tIfMerge)
       | tIfMerge:
       oEmitUnconditionalForwardBranch
       oFixAndFreeShuntList
       oOperandPop
       oFixPushLastAddress
       oEmitMergeSourceCoordinate
       @Statements
        [ (tWriteBegin)
        | tWriteBegin:
        @WriteProc
         oEmitSourceCoordinate
         [ (tTrapBegin)
         | *:
         @WriteParameter
          ?tTrapBegin (tTrapBegin)
          ?tLiteralAddress (tLiteralAddress)
          @OperandPushVariable
           oOperandPushVariable
           [ (tVarParm)
           | *:
           [ (tVarParm)
           | *:
           [ (tVarParm)
           | *:
           >>
          ;OperandPushVariable
          @OperandForceToStack
           [ oOperandChooseLength (two)
           | two:
           oEmitSingle(iPush)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mStatic)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushMode(mStack)
           ] or >
           >>
          ;OperandForceToStack
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStack)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          ?tVarParm (tVarParm)
          ?tParmEnd (tParmEnd)
          @OperandPushExpression
           [ (tLiteralString)
           | tLiteralString:
           oEmitNone(iData)
           oEmitString
           oEmitNone(iText)
           oOperandPushString
           @EmitStringDescriptor
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mString)
             | mString:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            >>
           ;EmitStringDescriptor
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchString)
            | *:
            [ (tFetchString)
            | *:
            [ (tFetchString)
            | tFetchString:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tConcatenate)
           | tConcatenate:
           @OperandConcatenatePop
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandPushTempWord
             oTempAllocate
             oOperandPushTemp
             oOperandSetValue(zero)
             oOperandSetLength(two)
             >>
            ;OperandPushTempWord
            oOperandSwap
            [ oOperandChooseMode (mStatic)
            | *:
            oEmitDouble(iLoada)
            oOperandSwap
            oEmitSingle(iPush)
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mTemp)
             | mTemp:
             oTempFree
             ] or >
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStatic)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandPushTempWord
             oTempAllocate
             oOperandPushTemp
             oOperandSetValue(zero)
             oOperandSetLength(two)
             >>
            ;OperandPushTempWord
            oOperandSwap
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oEmitDouble(iMov)
            ] or >
            oOperandSwap
            oEmitSingle(iPush)
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mTemp)
             | mTemp:
             oTempFree
             ] or >
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mTemp)
             | mTemp:
             oTempFree
             ] or >
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trConcatenate)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(eight)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             ] or >
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             >>
            ;OperandForceIntoTemp
            >>
           ;OperandConcatenatePop
           ] or >
           }
           [ (tLiteralString)
           | tLiteralString:
           oEmitNone(iData)
           oEmitString
           oEmitNone(iText)
           oOperandPushString
           @EmitStringDescriptor
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mString)
             | mString:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            >>
           ;EmitStringDescriptor
           ] or >
           }
           [ (tConcatenate)
           | tConcatenate:
           @OperandConcatenatePop
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandPushTempWord
             oTempAllocate
             oOperandPushTemp
             oOperandSetValue(zero)
             oOperandSetLength(two)
             >>
            ;OperandPushTempWord
            oOperandSwap
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oEmitDouble(iMov)
            ] or >
            oOperandSwap
            oEmitSingle(iPush)
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mTemp)
             | mTemp:
             oTempFree
             ] or >
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mTemp)
             | mTemp:
             oTempFree
             ] or >
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandPushTempWord
             oTempAllocate
             oOperandPushTemp
             oOperandSetValue(zero)
             oOperandSetLength(two)
             >>
            ;OperandPushTempWord
            oOperandSwap
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oEmitDouble(iMov)
            ] or >
            oOperandSwap
            oEmitSingle(iPush)
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mTemp)
             | mTemp:
             oTempFree
             ] or >
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mTemp)
             | mTemp:
             oTempFree
             ] or >
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trConcatenate)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(eight)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             ] or >
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             >>
            ;OperandForceIntoTemp
            >>
           ;OperandConcatenatePop
           ] or >
           }
           [ (tParmEnd)
           | *:
           ] or >
           >>
          ;OperandPushExpression
          [ (tParmEnd)
          | *:
          @OperandForceToStack
           [ oOperandChooseLength (two)
           | two:
           oEmitSingle(iPush)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oTempFree
            ] or >
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushMode(mStack)
           ] or >
           >>
          ;OperandForceToStack
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStack)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          ?tParmEnd (tParmEnd)
          @OperandPushExpression
           [ (tLiteralInteger)
           | tLiteralInteger:
           oOperandPushInteger
           ] or >
           }
           [ (tParmEnd)
           | *:
           ] or >
           >>
          ;OperandPushExpression
          @OperandForceToStack
           [ oOperandChooseLength (two)
           | two:
           oEmitSingle(iPush)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mManifest)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushMode(mStack)
           ] or >
           >>
          ;OperandForceToStack
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStack)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          ?tParmEnd (tParmEnd)
          ?tTrap (tTrap)
          oOperandPushTrap
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(twelve)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          >>
         ;WriteParameter
         }
         [ (tWriteEnd)
         | tWriteEnd:
         ] or >
         >>
        ;WriteProc
        ] or >
        }
        [ (tIfEnd)
        | *:
        ] or >
        >>
       ;Statements
       oFixForwardBranch
       oFixPopAddress
       ?tIfEnd (tIfEnd)
       ] or >
       >>
      ;IfStmt
      ] or >
      }
      [ (tTrapBegin)
      | tTrapBegin:
      @TrapStmt
       oEmitSourceCoordinate
       [ (tLiteralAddress)
       | tLiteralAddress:
       @OperandPushVariable
        oOperandPushVariable
        [ (tVarParm)
        | *:
        [ (tVarParm)
        | *:
        [ (tVarParm)
        | *:
        >>
       ;OperandPushVariable
       oOperandPushCopy
       @OperandForceToStack
        [ oOperandChooseLength (two)
        | two:
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mStatic)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mStack)
        ] or >
        >>
       ;OperandForceToStack
       oOperandPop
       ?tVarParm (tVarParm)
       ?tParmEnd (tParmEnd)
       [ (tTrap)
       | tTrap:
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStatic)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushTrap
       oEmitSingle(iCall)
       oOperandPop
       oOperandPushMode(mStackReg)
       oOperandSetLength(two)
       oOperandPushMode(mManifest)
       oOperandSetLength(two)
       oOperandSetValue(four)
       oEmitDouble(iAdd)
       oOperandPop
       oOperandPop
       ] or >
       ] or >
       >>
      ;TrapStmt
      ] or >
      }
      [ (tWriteBegin)
      | tWriteBegin:
      @WriteProc
       oEmitSourceCoordinate
       [ (tTrapBegin)
       | *:
       @WriteParameter
        ?tTrapBegin (tTrapBegin)
        ?tLiteralAddress (tLiteralAddress)
        @OperandPushVariable
         oOperandPushVariable
         [ (tVarParm)
         | *:
         [ (tVarParm)
         | *:
         [ (tVarParm)
         | *:
         >>
        ;OperandPushVariable
        @OperandForceToStack
         [ oOperandChooseLength (two)
         | two:
         oEmitSingle(iPush)
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mStatic)
          | *:
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandPushMode(mStack)
         ] or >
         >>
        ;OperandForceToStack
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mStack)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        ?tVarParm (tVarParm)
        ?tParmEnd (tParmEnd)
        @OperandPushExpression
         [ (tLiteralString)
         | tLiteralString:
         oEmitNone(iData)
         oEmitString
         oEmitNone(iText)
         oOperandPushString
         @EmitStringDescriptor
          @OperandForceAddressIntoTemp
           [ oOperandChooseMode (mString)
           | mString:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           oOperandSwap
           oEmitDouble(iLoada)
           oOperandPop
           ] or >
           oOperandSetLength(two)
           >>
          ;OperandForceAddressIntoTemp
          >>
         ;EmitStringDescriptor
         ] or >
         }
         [ (tLiteralAddress)
         | tLiteralAddress:
         @OperandPushVariable
          oOperandPushVariable
          [ (tFetchString)
          | *:
          [ (tFetchString)
          | *:
          [ (tFetchString)
          | tFetchString:
          oOperandSetLength(regCX)
          ] or >
          >>
         ;OperandPushVariable
         ] or >
         }
         [ (tConcatenate)
         | tConcatenate:
         @OperandConcatenatePop
          @SaveTempRegsToStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(one)
           oEmitSingle(iPush)
           oOperandSetRegnum(two)
           oEmitSingle(iPush)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPush)
           oOperandSetRegnum(four)
           oEmitSingle(iPush)
           oOperandPop
           >>
          ;SaveTempRegsToStack
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mStatic)
          | *:
          oEmitDouble(iLoada)
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStatic)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oEmitDouble(iMov)
          ] or >
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mTrap)
          oOperandSetValue(trConcatenate)
          oOperandSetLength(two)
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(eight)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          oOperandPushMode(mScratchReg1)
          oOperandSetLength(two)
          oOperandPushMode(mResultReg)
          oOperandSetLength(two)
          oEmitDouble(iMov)
          oOperandPop
          @RestoreTempRegsFromStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(four)
           oEmitSingle(iPop)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPop)
           oOperandSetRegnum(two)
           oEmitSingle(iPop)
           oOperandSetRegnum(one)
           oEmitSingle(iPop)
           oOperandPop
           >>
          ;RestoreTempRegsFromStack
          @OperandForceIntoTemp
           [ oOperandChooseMode (mScratchReg1)
           | *:
           [ oOperandChooseLength (two)
           | two:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           ] or >
           oOperandSwap
           oEmitDouble(iMov)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mScratchReg1)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandSetMode(mTemp)
           >>
          ;OperandForceIntoTemp
          >>
         ;OperandConcatenatePop
         ] or >
         }
         [ (tLiteralString)
         | tLiteralString:
         oEmitNone(iData)
         oEmitString
         oEmitNone(iText)
         oOperandPushString
         @EmitStringDescriptor
          @OperandForceAddressIntoTemp
           [ oOperandChooseMode (mString)
           | mString:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           oOperandSwap
           oEmitDouble(iLoada)
           oOperandPop
           ] or >
           oOperandSetLength(two)
           >>
          ;OperandForceAddressIntoTemp
          >>
         ;EmitStringDescriptor
         ] or >
         }
         [ (tConcatenate)
         | tConcatenate:
         @OperandConcatenatePop
          @SaveTempRegsToStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(one)
           oEmitSingle(iPush)
           oOperandSetRegnum(two)
           oEmitSingle(iPush)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPush)
           oOperandSetRegnum(four)
           oEmitSingle(iPush)
           oOperandPop
           >>
          ;SaveTempRegsToStack
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oEmitDouble(iMov)
          ] or >
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oEmitDouble(iMov)
          ] or >
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mTrap)
          oOperandSetValue(trConcatenate)
          oOperandSetLength(two)
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(eight)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          oOperandPushMode(mScratchReg1)
          oOperandSetLength(two)
          oOperandPushMode(mResultReg)
          oOperandSetLength(two)
          oEmitDouble(iMov)
          oOperandPop
          @RestoreTempRegsFromStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(four)
           oEmitSingle(iPop)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPop)
           oOperandSetRegnum(two)
           oEmitSingle(iPop)
           oOperandSetRegnum(one)
           oEmitSingle(iPop)
           oOperandPop
           >>
          ;RestoreTempRegsFromStack
          @OperandForceIntoTemp
           [ oOperandChooseMode (mScratchReg1)
           | *:
           [ oOperandChooseLength (two)
           | two:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           ] or >
           oOperandSwap
           oEmitDouble(iMov)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mScratchReg1)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandSetMode(mTemp)
           >>
          ;OperandForceIntoTemp
          >>
         ;OperandConcatenatePop
         ] or >
         }
         [ (tParmEnd)
         | *:
         ] or >
         >>
        ;OperandPushExpression
        [ (tParmEnd)
        | *:
        @OperandForceToStack
         [ oOperandChooseLength (two)
         | two:
         oEmitSingle(iPush)
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oTempFree
          ] or >
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandPushMode(mStack)
         ] or >
         >>
        ;OperandForceToStack
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mStack)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        ?tParmEnd (tParmEnd)
        @OperandPushExpression
         [ (tLiteralInteger)
         | tLiteralInteger:
         oOperandPushInteger
         ] or >
         }
         [ (tParmEnd)
         | *:
         ] or >
         >>
        ;OperandPushExpression
        @OperandForceToStack
         [ oOperandChooseLength (two)
         | two:
         oEmitSingle(iPush)
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mManifest)
          | *:
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandPushMode(mStack)
         ] or >
         >>
        ;OperandForceToStack
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mStack)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        ?tParmEnd (tParmEnd)
        ?tTrap (tTrap)
        oOperandPushTrap
        oEmitSingle(iCall)
        oOperandPop
        oOperandPushMode(mStackReg)
        oOperandSetLength(two)
        oOperandPushMode(mManifest)
        oOperandSetLength(two)
        oOperandSetValue(twelve)
        oEmitDouble(iAdd)
        oOperandPop
        oOperandPop
        >>
       ;WriteParameter
       }
       [ (tWriteEnd)
       | tWriteEnd:
       ] or >
       >>
      ;WriteProc
      ] or >
      }
      [ (tTrapBegin)
      | tTrapBegin:
      @TrapStmt
       oEmitSourceCoordinate
       [ (tLiteralAddress)
       | tLiteralAddress:
       @OperandPushVariable
        oOperandPushVariable
        [ (tVarParm)
        | *:
        [ (tVarParm)
        | *:
        [ (tVarParm)
        | *:
        >>
       ;OperandPushVariable
       oOperandPushCopy
       @OperandForceToStack
        [ oOperandChooseLength (two)
        | two:
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mStatic)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mStack)
        ] or >
        >>
       ;OperandForceToStack
       oOperandPop
       ?tVarParm (tVarParm)
       ?tParmEnd (tParmEnd)
       [ (tTrap)
       | tTrap:
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStatic)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushTrap
       oEmitSingle(iCall)
       oOperandPop
       oOperandPushMode(mStackReg)
       oOperandSetLength(two)
       oOperandPushMode(mManifest)
       oOperandSetLength(two)
       oOperandSetValue(four)
       oEmitDouble(iAdd)
       oOperandPop
       oOperandPop
       ] or >
       ] or >
       >>
      ;TrapStmt
      ] or >
      }
      [ (tWriteBegin)
      | tWriteBegin:
      @WriteProc
       oEmitSourceCoordinate
       [ (tTrapBegin)
       | *:
       @WriteParameter
        ?tTrapBegin (tTrapBegin)
        ?tLiteralAddress (tLiteralAddress)
        @OperandPushVariable
         oOperandPushVariable
         [ (tVarParm)
         | *:
         [ (tVarParm)
         | *:
         [ (tVarParm)
         | *:
         >>
        ;OperandPushVariable
        @OperandForceToStack
         [ oOperandChooseLength (two)
         | two:
         oEmitSingle(iPush)
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mStatic)
          | *:
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandPushMode(mStack)
         ] or >
         >>
        ;OperandForceToStack
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mStack)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        ?tVarParm (tVarParm)
        ?tParmEnd (tParmEnd)
        @OperandPushExpression
         [ (tLiteralString)
         | tLiteralString:
         oEmitNone(iData)
         oEmitString
         oEmitNone(iText)
         oOperandPushString
         @EmitStringDescriptor
          @OperandForceAddressIntoTemp
           [ oOperandChooseMode (mString)
           | mString:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           oOperandSwap
           oEmitDouble(iLoada)
           oOperandPop
           ] or >
           oOperandSetLength(two)
           >>
          ;OperandForceAddressIntoTemp
          >>
         ;EmitStringDescriptor
         ] or >
         }
         [ (tLiteralAddress)
         | tLiteralAddress:
         @OperandPushVariable
          oOperandPushVariable
          [ (tFetchString)
          | *:
          [ (tFetchString)
          | *:
          [ (tFetchString)
          | tFetchString:
          oOperandSetLength(regCX)
          ] or >
          >>
         ;OperandPushVariable
         ] or >
         }
         [ (tConcatenate)
         | tConcatenate:
         @OperandConcatenatePop
          @SaveTempRegsToStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(one)
           oEmitSingle(iPush)
           oOperandSetRegnum(two)
           oEmitSingle(iPush)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPush)
           oOperandSetRegnum(four)
           oEmitSingle(iPush)
           oOperandPop
           >>
          ;SaveTempRegsToStack
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mStatic)
          | *:
          oEmitDouble(iLoada)
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStatic)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oEmitDouble(iMov)
          ] or >
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mTrap)
          oOperandSetValue(trConcatenate)
          oOperandSetLength(two)
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(eight)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          oOperandPushMode(mScratchReg1)
          oOperandSetLength(two)
          oOperandPushMode(mResultReg)
          oOperandSetLength(two)
          oEmitDouble(iMov)
          oOperandPop
          @RestoreTempRegsFromStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(four)
           oEmitSingle(iPop)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPop)
           oOperandSetRegnum(two)
           oEmitSingle(iPop)
           oOperandSetRegnum(one)
           oEmitSingle(iPop)
           oOperandPop
           >>
          ;RestoreTempRegsFromStack
          @OperandForceIntoTemp
           [ oOperandChooseMode (mScratchReg1)
           | *:
           [ oOperandChooseLength (two)
           | two:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           ] or >
           oOperandSwap
           oEmitDouble(iMov)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mScratchReg1)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandSetMode(mTemp)
           >>
          ;OperandForceIntoTemp
          >>
         ;OperandConcatenatePop
         ] or >
         }
         [ (tLiteralString)
         | tLiteralString:
         oEmitNone(iData)
         oEmitString
         oEmitNone(iText)
         oOperandPushString
         @EmitStringDescriptor
          @OperandForceAddressIntoTemp
           [ oOperandChooseMode (mString)
           | mString:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           oOperandSwap
           oEmitDouble(iLoada)
           oOperandPop
           ] or >
           oOperandSetLength(two)
           >>
          ;OperandForceAddressIntoTemp
          >>
         ;EmitStringDescriptor
         ] or >
         }
         [ (tConcatenate)
         | tConcatenate:
         @OperandConcatenatePop
          @SaveTempRegsToStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(one)
           oEmitSingle(iPush)
           oOperandSetRegnum(two)
           oEmitSingle(iPush)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPush)
           oOperandSetRegnum(four)
           oEmitSingle(iPush)
           oOperandPop
           >>
          ;SaveTempRegsToStack
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oEmitDouble(iMov)
          ] or >
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oEmitDouble(iMov)
          ] or >
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mTrap)
          oOperandSetValue(trConcatenate)
          oOperandSetLength(two)
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(eight)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          oOperandPushMode(mScratchReg1)
          oOperandSetLength(two)
          oOperandPushMode(mResultReg)
          oOperandSetLength(two)
          oEmitDouble(iMov)
          oOperandPop
          @RestoreTempRegsFromStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(four)
           oEmitSingle(iPop)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPop)
           oOperandSetRegnum(two)
           oEmitSingle(iPop)
           oOperandSetRegnum(one)
           oEmitSingle(iPop)
           oOperandPop
           >>
          ;RestoreTempRegsFromStack
          @OperandForceIntoTemp
           [ oOperandChooseMode (mScratchReg1)
           | *:
           [ oOperandChooseLength (two)
           | two:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           ] or >
           oOperandSwap
           oEmitDouble(iMov)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mScratchReg1)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandSetMode(mTemp)
           >>
          ;OperandForceIntoTemp
          >>
         ;OperandConcatenatePop
         ] or >
         }
         [ (tParmEnd)
         | *:
         ] or >
         >>
        ;OperandPushExpression
        [ (tParmEnd)
        | *:
        @OperandForceToStack
         [ oOperandChooseLength (two)
         | two:
         oEmitSingle(iPush)
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oTempFree
          ] or >
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandPushMode(mStack)
         ] or >
         >>
        ;OperandForceToStack
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mStack)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        ?tParmEnd (tParmEnd)
        @OperandPushExpression
         [ (tLiteralInteger)
         | tLiteralInteger:
         oOperandPushInteger
         ] or >
         }
         [ (tParmEnd)
         | *:
         ] or >
         >>
        ;OperandPushExpression
        @OperandForceToStack
         [ oOperandChooseLength (two)
         | two:
         oEmitSingle(iPush)
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mManifest)
          | *:
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandPushMode(mStack)
         ] or >
         >>
        ;OperandForceToStack
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mStack)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        ?tParmEnd (tParmEnd)
        ?tTrap (tTrap)
        oOperandPushTrap
        oEmitSingle(iCall)
        oOperandPop
        oOperandPushMode(mStackReg)
        oOperandSetLength(two)
        oOperandPushMode(mManifest)
        oOperandSetLength(two)
        oOperandSetValue(twelve)
        oEmitDouble(iAdd)
        oOperandPop
        oOperandPop
        >>
       ;WriteParameter
       }
       [ (tWriteEnd)
       | tWriteEnd:
       ] or >
       >>
      ;WriteProc
      ] or >
      }
      [ (tTrapBegin)
      | tTrapBegin:
      @TrapStmt
       oEmitSourceCoordinate
       [ (tLiteralAddress)
       | tLiteralAddress:
       @OperandPushVariable
        oOperandPushVariable
        [ (tVarParm)
        | *:
        [ (tVarParm)
        | *:
        [ (tVarParm)
        | *:
        >>
       ;OperandPushVariable
       oOperandPushCopy
       @OperandForceToStack
        [ oOperandChooseLength (two)
        | two:
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mStatic)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mStack)
        ] or >
        >>
       ;OperandForceToStack
       oOperandPop
       ?tVarParm (tVarParm)
       ?tParmEnd (tParmEnd)
       [ (tTrap)
       | tTrap:
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStatic)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushTrap
       oEmitSingle(iCall)
       oOperandPop
       oOperandPushMode(mStackReg)
       oOperandSetLength(two)
       oOperandPushMode(mManifest)
       oOperandSetLength(two)
       oOperandSetValue(four)
       oEmitDouble(iAdd)
       oOperandPop
       oOperandPop
       ] or >
       ] or >
       >>
      ;TrapStmt
      ] or >
      }
      [ (tTrapBegin)
      | tTrapBegin:
      @TrapStmt
       oEmitSourceCoordinate
       [ (tLiteralAddress)
       | tLiteralAddress:
       @OperandPushVariable
        oOperandPushVariable
        [ (tVarParm)
        | *:
        [ (tVarParm)
        | *:
        [ (tVarParm)
        | *:
        >>
       ;OperandPushVariable
       oOperandPushCopy
       @OperandForceToStack
        [ oOperandChooseLength (two)
        | two:
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mStatic)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mStack)
        ] or >
        >>
       ;OperandForceToStack
       oOperandPop
       ?tVarParm (tVarParm)
       ?tParmEnd (tParmEnd)
       [ (tTrap)
       | tTrap:
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStatic)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushTrap
       oEmitSingle(iCall)
       oOperandPop
       oOperandPushMode(mStackReg)
       oOperandSetLength(two)
       oOperandPushMode(mManifest)
       oOperandSetLength(two)
       oOperandSetValue(four)
       oEmitDouble(iAdd)
       oOperandPop
       oOperandPop
       ] or >
       ] or >
       >>
      ;TrapStmt
      ] or >
      }
      [ (tIfBegin)
      | tIfBegin:
      @IfStmt
       oEmitSourceCoordinate
       @OperandPushBooleanControlExpression
        @OperandPushExpression
         [ (tLiteralAddress)
         | tLiteralAddress:
         @OperandPushVariable
          oOperandPushVariable
          [ (tFetchString)
          | *:
          [ (tFetchString)
          | *:
          [ (tFetchString)
          | tFetchString:
          oOperandSetLength(regCX)
          ] or >
          >>
         ;OperandPushVariable
         ] or >
         }
         [ (tLiteralAddress)
         | tLiteralAddress:
         @OperandPushVariable
          oOperandPushVariable
          [ (tFetchString)
          | *:
          [ (tFetchString)
          | *:
          [ (tFetchString)
          | tFetchString:
          oOperandSetLength(regCX)
          ] or >
          >>
         ;OperandPushVariable
         ] or >
         }
         [ (tLength)
         | tLength:
         @OperandLength
          @SaveTempRegsToStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(one)
           oEmitSingle(iPush)
           oOperandSetRegnum(two)
           oEmitSingle(iPush)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPush)
           oOperandSetRegnum(four)
           oEmitSingle(iPush)
           oOperandPop
           >>
          ;SaveTempRegsToStack
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mStatic)
          | *:
          oEmitDouble(iLoada)
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStatic)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mTrap)
          oOperandSetValue(trLength)
          oOperandSetLength(two)
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(four)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          oOperandPushMode(mScratchReg1)
          oOperandSetLength(two)
          oOperandPushMode(mResultReg)
          oOperandSetLength(two)
          oEmitDouble(iMov)
          oOperandPop
          @RestoreTempRegsFromStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(four)
           oEmitSingle(iPop)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPop)
           oOperandSetRegnum(two)
           oEmitSingle(iPop)
           oOperandSetRegnum(one)
           oEmitSingle(iPop)
           oOperandPop
           >>
          ;RestoreTempRegsFromStack
          @OperandForceIntoTemp
           [ oOperandChooseMode (mScratchReg1)
           | *:
           [ oOperandChooseLength (two)
           | two:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           ] or >
           oOperandSwap
           oEmitDouble(iMov)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mScratchReg1)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandSetMode(mTemp)
           >>
          ;OperandForceIntoTemp
          >>
         ;OperandLength
         ] or >
         }
         [ (tLiteralAddress)
         | tLiteralAddress:
         @OperandPushVariable
          oOperandPushVariable
          [ (tFetchString)
          | *:
          [ (tFetchString)
          | *:
          [ (tFetchString)
          | tFetchString:
          oOperandSetLength(regCX)
          ] or >
          >>
         ;OperandPushVariable
         ] or >
         }
         [ (tLength)
         | tLength:
         @OperandLength
          @SaveTempRegsToStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(one)
           oEmitSingle(iPush)
           oOperandSetRegnum(two)
           oEmitSingle(iPush)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPush)
           oOperandSetRegnum(four)
           oEmitSingle(iPush)
           oOperandPop
           >>
          ;SaveTempRegsToStack
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mStatic)
          | *:
          oEmitDouble(iLoada)
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStatic)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mTrap)
          oOperandSetValue(trLength)
          oOperandSetLength(two)
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(four)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          oOperandPushMode(mScratchReg1)
          oOperandSetLength(two)
          oOperandPushMode(mResultReg)
          oOperandSetLength(two)
          oEmitDouble(iMov)
          oOperandPop
          @RestoreTempRegsFromStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(four)
           oEmitSingle(iPop)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPop)
           oOperandSetRegnum(two)
           oEmitSingle(iPop)
           oOperandSetRegnum(one)
           oEmitSingle(iPop)
           oOperandPop
           >>
          ;RestoreTempRegsFromStack
          @OperandForceIntoTemp
           [ oOperandChooseMode (mScratchReg1)
           | *:
           [ oOperandChooseLength (two)
           | two:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           ] or >
           oOperandSwap
           oEmitDouble(iMov)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mScratchReg1)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandSetMode(mTemp)
           >>
          ;OperandForceIntoTemp
          >>
         ;OperandLength
         ] or >
         }
         [ (tSubstring)
         | tSubstring:
         @OperandSubstringPopPop
          @SaveTempRegsToStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(one)
           oEmitSingle(iPush)
           oOperandSetRegnum(two)
           oEmitSingle(iPush)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPush)
           oOperandSetRegnum(four)
           oEmitSingle(iPush)
           oOperandPop
           >>
          ;SaveTempRegsToStack
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mStatic)
          | *:
          oEmitDouble(iLoada)
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStatic)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mTrap)
          oOperandSetValue(trSubstring)
          oOperandSetLength(two)
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(twelve)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          oOperandPushMode(mScratchReg1)
          oOperandSetLength(two)
          oOperandPushMode(mResultReg)
          oOperandSetLength(two)
          oEmitDouble(iMov)
          oOperandPop
          @RestoreTempRegsFromStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(four)
           oEmitSingle(iPop)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPop)
           oOperandSetRegnum(two)
           oEmitSingle(iPop)
           oOperandSetRegnum(one)
           oEmitSingle(iPop)
           oOperandPop
           >>
          ;RestoreTempRegsFromStack
          @OperandForceIntoTemp
           [ oOperandChooseMode (mScratchReg1)
           | *:
           [ oOperandChooseLength (two)
           | two:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           ] or >
           oOperandSwap
           oEmitDouble(iMov)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mScratchReg1)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandSetMode(mTemp)
           >>
          ;OperandForceIntoTemp
          >>
         ;OperandSubstringPopPop
         ] or >
         }
         [ (tLiteralString)
         | tLiteralString:
         oEmitNone(iData)
         oEmitString
         oEmitNone(iText)
         oOperandPushString
         @EmitStringDescriptor
          @OperandForceAddressIntoTemp
           [ oOperandChooseMode (mString)
           | mString:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           oOperandSwap
           oEmitDouble(iLoada)
           oOperandPop
           ] or >
           oOperandSetLength(two)
           >>
          ;OperandForceAddressIntoTemp
          >>
         ;EmitStringDescriptor
         ] or >
         }
         [ (tStringEqual)
         | tStringEqual:
         @OperandStringEqualPop
          @SaveTempRegsToStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(one)
           oEmitSingle(iPush)
           oOperandSetRegnum(two)
           oEmitSingle(iPush)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPush)
           oOperandSetRegnum(four)
           oEmitSingle(iPush)
           oOperandPop
           >>
          ;SaveTempRegsToStack
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oEmitDouble(iMov)
          ] or >
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oEmitDouble(iMov)
          ] or >
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mTrap)
          oOperandSetValue(trStringEqual)
          oOperandSetLength(two)
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(eight)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          oOperandPushMode(mScratchReg1)
          oOperandSetLength(two)
          oOperandPushMode(mResultReg)
          oOperandSetLength(two)
          oEmitDouble(iMov)
          oOperandPop
          @RestoreTempRegsFromStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(four)
           oEmitSingle(iPop)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPop)
           oOperandSetRegnum(two)
           oEmitSingle(iPop)
           oOperandSetRegnum(one)
           oEmitSingle(iPop)
           oOperandPop
           >>
          ;RestoreTempRegsFromStack
          @OperandForceIntoTemp
           [ oOperandChooseMode (mScratchReg1)
           | *:
           [ oOperandChooseLength (two)
           | two:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           ] or >
           oOperandSwap
           oEmitDouble(iMov)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mScratchReg1)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandSetMode(mTemp)
           >>
          ;OperandForceIntoTemp
          >>
         ;OperandStringEqualPop
         ] or >
         }
         [ (tIfThen)
         | *:
         ] or >
         >>
        ;OperandPushExpression
        @OperandForceToJumpCondition
         [ oOperandIsJumpCondition (no)
         | *:
         [ oOperandChooseManifestValue ()
         | *:
         @EmitTst
          [ oOperandChooseLength (two)
          | two:
          oOperandPushMode(mManifest)
          oOperandSetValue(zero)
          oOperandSetLength(two)
          ] or >
          @EmitCmp
           oOperandSwap
           [ oOperandChooseMode (mTemp)
           | *:
           oOperandSwap
           @OperandLeftOrRightIsTemp
            [ oOperandChooseMode (mManifest)
            | *:
            oOperandSwap
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oOperandSwap
            >>yes
           ;OperandLeftOrRightIsTemp
           [@OperandLeftOrRightIsTemp (yes)
           | yes:
           oEmitDouble(iCmp)
           ] or >
           >>
          ;EmitCmp
          oOperandPop
          >>
         ;EmitTst
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oTempFree
          ] or >
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandPushJumpCondition(iJne)
         >>
        ;OperandForceToJumpCondition
        >>
       ;OperandPushBooleanControlExpression
       ?tIfThen (tIfThen)
       [ oOperandChooseJumpCondition (iJne)
       | *:
       oOperandComplementJumpCondition
       @OperandInfixOr
        @OperandForceToJumpCondition
         [ oOperandIsJumpCondition (yes)
         | yes:
         ] or >
         >>
        ;OperandForceToJumpCondition
        [ oOperandChooseJumpCondition (iJeq)
        | *:
        oEmitConditionalForwardBranch
        oFixAndFreeFalseBranches
        oFixPushLastAddress
        oOperandMergeShuntsWithAddress
        oFixPopAddress
        >>
       ;OperandInfixOr
       @Statements
        [ (tWriteBegin)
        | tWriteBegin:
        @WriteProc
         oEmitSourceCoordinate
         [ (tTrapBegin)
         | *:
         @WriteParameter
          ?tTrapBegin (tTrapBegin)
          ?tLiteralAddress (tLiteralAddress)
          @OperandPushVariable
           oOperandPushVariable
           [ (tVarParm)
           | *:
           [ (tVarParm)
           | *:
           [ (tVarParm)
           | *:
           >>
          ;OperandPushVariable
          @OperandForceToStack
           [ oOperandChooseLength (two)
           | two:
           oEmitSingle(iPush)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mStatic)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushMode(mStack)
           ] or >
           >>
          ;OperandForceToStack
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStack)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          ?tVarParm (tVarParm)
          ?tParmEnd (tParmEnd)
          @OperandPushExpression
           [ (tLiteralString)
           | tLiteralString:
           oEmitNone(iData)
           oEmitString
           oEmitNone(iText)
           oOperandPushString
           @EmitStringDescriptor
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mString)
             | mString:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            >>
           ;EmitStringDescriptor
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchString)
            | *:
            [ (tFetchString)
            | *:
            [ (tFetchString)
            | tFetchString:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tConcatenate)
           | tConcatenate:
           @OperandConcatenatePop
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandPushTempWord
             oTempAllocate
             oOperandPushTemp
             oOperandSetValue(zero)
             oOperandSetLength(two)
             >>
            ;OperandPushTempWord
            oOperandSwap
            [ oOperandChooseMode (mStatic)
            | *:
            oEmitDouble(iLoada)
            oOperandSwap
            oEmitSingle(iPush)
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mTemp)
             | mTemp:
             oTempFree
             ] or >
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStatic)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandPushTempWord
             oTempAllocate
             oOperandPushTemp
             oOperandSetValue(zero)
             oOperandSetLength(two)
             >>
            ;OperandPushTempWord
            oOperandSwap
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oEmitDouble(iMov)
            ] or >
            oOperandSwap
            oEmitSingle(iPush)
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mTemp)
             | mTemp:
             oTempFree
             ] or >
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mTemp)
             | mTemp:
             oTempFree
             ] or >
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trConcatenate)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(eight)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             ] or >
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             >>
            ;OperandForceIntoTemp
            >>
           ;OperandConcatenatePop
           ] or >
           }
           [ (tLiteralString)
           | tLiteralString:
           oEmitNone(iData)
           oEmitString
           oEmitNone(iText)
           oOperandPushString
           @EmitStringDescriptor
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mString)
             | mString:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            >>
           ;EmitStringDescriptor
           ] or >
           }
           [ (tConcatenate)
           | tConcatenate:
           @OperandConcatenatePop
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandPushTempWord
             oTempAllocate
             oOperandPushTemp
             oOperandSetValue(zero)
             oOperandSetLength(two)
             >>
            ;OperandPushTempWord
            oOperandSwap
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oEmitDouble(iMov)
            ] or >
            oOperandSwap
            oEmitSingle(iPush)
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mTemp)
             | mTemp:
             oTempFree
             ] or >
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mTemp)
             | mTemp:
             oTempFree
             ] or >
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandPushTempWord
             oTempAllocate
             oOperandPushTemp
             oOperandSetValue(zero)
             oOperandSetLength(two)
             >>
            ;OperandPushTempWord
            oOperandSwap
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oEmitDouble(iMov)
            ] or >
            oOperandSwap
            oEmitSingle(iPush)
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mTemp)
             | mTemp:
             oTempFree
             ] or >
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mTemp)
             | mTemp:
             oTempFree
             ] or >
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trConcatenate)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(eight)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             ] or >
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             >>
            ;OperandForceIntoTemp
            >>
           ;OperandConcatenatePop
           ] or >
           }
           [ (tParmEnd)
           | *:
           ] or >
           >>
          ;OperandPushExpression
          [ (tParmEnd)
          | *:
          @OperandForceToStack
           [ oOperandChooseLength (two)
           | two:
           oEmitSingle(iPush)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oTempFree
            ] or >
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushMode(mStack)
           ] or >
           >>
          ;OperandForceToStack
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStack)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          ?tParmEnd (tParmEnd)
          @OperandPushExpression
           [ (tLiteralInteger)
           | tLiteralInteger:
           oOperandPushInteger
           ] or >
           }
           [ (tParmEnd)
           | *:
           ] or >
           >>
          ;OperandPushExpression
          @OperandForceToStack
           [ oOperandChooseLength (two)
           | two:
           oEmitSingle(iPush)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mManifest)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushMode(mStack)
           ] or >
           >>
          ;OperandForceToStack
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStack)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          ?tParmEnd (tParmEnd)
          ?tTrap (tTrap)
          oOperandPushTrap
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(twelve)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          >>
         ;WriteParameter
         }
         [ (tWriteEnd)
         | tWriteEnd:
         ] or >
         >>
        ;WriteProc
        ] or >
        }
        [ (tIfMerge)
        | *:
        ] or >
        >>
       ;Statements
       [ (tIfMerge)
       | tIfMerge:
       oEmitUnconditionalForwardBranch
       oFixAndFreeShuntList
       oOperandPop
       oFixPushLastAddress
       oEmitMergeSourceCoordinate
       @Statements
        [ (tWriteBegin)
        | tWriteBegin:
        @WriteProc
         oEmitSourceCoordinate
         [ (tTrapBegin)
         | *:
         @WriteParameter
          ?tTrapBegin (tTrapBegin)
          ?tLiteralAddress (tLiteralAddress)
          @OperandPushVariable
           oOperandPushVariable
           [ (tVarParm)
           | *:
           [ (tVarParm)
           | *:
           [ (tVarParm)
           | *:
           >>
          ;OperandPushVariable
          @OperandForceToStack
           [ oOperandChooseLength (two)
           | two:
           oEmitSingle(iPush)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mStatic)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushMode(mStack)
           ] or >
           >>
          ;OperandForceToStack
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStack)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          ?tVarParm (tVarParm)
          ?tParmEnd (tParmEnd)
          @OperandPushExpression
           [ (tLiteralString)
           | tLiteralString:
           oEmitNone(iData)
           oEmitString
           oEmitNone(iText)
           oOperandPushString
           @EmitStringDescriptor
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mString)
             | mString:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            >>
           ;EmitStringDescriptor
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchString)
            | *:
            [ (tFetchString)
            | *:
            [ (tFetchString)
            | tFetchString:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tConcatenate)
           | tConcatenate:
           @OperandConcatenatePop
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandPushTempWord
             oTempAllocate
             oOperandPushTemp
             oOperandSetValue(zero)
             oOperandSetLength(two)
             >>
            ;OperandPushTempWord
            oOperandSwap
            [ oOperandChooseMode (mStatic)
            | *:
            oEmitDouble(iLoada)
            oOperandSwap
            oEmitSingle(iPush)
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mTemp)
             | mTemp:
             oTempFree
             ] or >
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStatic)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandPushTempWord
             oTempAllocate
             oOperandPushTemp
             oOperandSetValue(zero)
             oOperandSetLength(two)
             >>
            ;OperandPushTempWord
            oOperandSwap
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oEmitDouble(iMov)
            ] or >
            oOperandSwap
            oEmitSingle(iPush)
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mTemp)
             | mTemp:
             oTempFree
             ] or >
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mTemp)
             | mTemp:
             oTempFree
             ] or >
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trConcatenate)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(eight)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             ] or >
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             >>
            ;OperandForceIntoTemp
            >>
           ;OperandConcatenatePop
           ] or >
           }
           [ (tLiteralString)
           | tLiteralString:
           oEmitNone(iData)
           oEmitString
           oEmitNone(iText)
           oOperandPushString
           @EmitStringDescriptor
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mString)
             | mString:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            >>
           ;EmitStringDescriptor
           ] or >
           }
           [ (tConcatenate)
           | tConcatenate:
           @OperandConcatenatePop
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandPushTempWord
             oTempAllocate
             oOperandPushTemp
             oOperandSetValue(zero)
             oOperandSetLength(two)
             >>
            ;OperandPushTempWord
            oOperandSwap
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oEmitDouble(iMov)
            ] or >
            oOperandSwap
            oEmitSingle(iPush)
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mTemp)
             | mTemp:
             oTempFree
             ] or >
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mTemp)
             | mTemp:
             oTempFree
             ] or >
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandPushTempWord
             oTempAllocate
             oOperandPushTemp
             oOperandSetValue(zero)
             oOperandSetLength(two)
             >>
            ;OperandPushTempWord
            oOperandSwap
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oEmitDouble(iMov)
            ] or >
            oOperandSwap
            oEmitSingle(iPush)
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mTemp)
             | mTemp:
             oTempFree
             ] or >
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mTemp)
             | mTemp:
             oTempFree
             ] or >
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trConcatenate)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(eight)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             ] or >
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             >>
            ;OperandForceIntoTemp
            >>
           ;OperandConcatenatePop
           ] or >
           }
           [ (tParmEnd)
           | *:
           ] or >
           >>
          ;OperandPushExpression
          [ (tParmEnd)
          | *:
          @OperandForceToStack
           [ oOperandChooseLength (two)
           | two:
           oEmitSingle(iPush)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oTempFree
            ] or >
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushMode(mStack)
           ] or >
           >>
          ;OperandForceToStack
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStack)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          ?tParmEnd (tParmEnd)
          @OperandPushExpression
           [ (tLiteralInteger)
           | tLiteralInteger:
           oOperandPushInteger
           ] or >
           }
           [ (tParmEnd)
           | *:
           ] or >
           >>
          ;OperandPushExpression
          @OperandForceToStack
           [ oOperandChooseLength (two)
           | two:
           oEmitSingle(iPush)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mManifest)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushMode(mStack)
           ] or >
           >>
          ;OperandForceToStack
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStack)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          ?tParmEnd (tParmEnd)
          ?tTrap (tTrap)
          oOperandPushTrap
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(twelve)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          >>
         ;WriteParameter
         }
         [ (tWriteEnd)
         | tWriteEnd:
         ] or >
         >>
        ;WriteProc
        ] or >
        }
        [ (tIfEnd)
        | *:
        ] or >
        >>
       ;Statements
       oFixForwardBranch
       oFixPopAddress
       ?tIfEnd (tIfEnd)
       ] or >
       >>
      ;IfStmt
      ] or >
      }
      [ (tTrapBegin)
      | tTrapBegin:
      @TrapStmt
       oEmitSourceCoordinate
       [ (tLiteralAddress)
       | tLiteralAddress:
       @OperandPushVariable
        oOperandPushVariable
        [ (tVarParm)
        | *:
        [ (tVarParm)
        | *:
        [ (tVarParm)
        | *:
        >>
       ;OperandPushVariable
       oOperandPushCopy
       @OperandForceToStack
        [ oOperandChooseLength (two)
        | two:
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mStatic)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mStack)
        ] or >
        >>
       ;OperandForceToStack
       oOperandPop
       ?tVarParm (tVarParm)
       ?tParmEnd (tParmEnd)
       [ (tTrap)
       | tTrap:
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStatic)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushTrap
       oEmitSingle(iCall)
       oOperandPop
       oOperandPushMode(mStackReg)
       oOperandSetLength(two)
       oOperandPushMode(mManifest)
       oOperandSetLength(two)
       oOperandSetValue(four)
       oEmitDouble(iAdd)
       oOperandPop
       oOperandPop
       ] or >
       ] or >
       >>
      ;TrapStmt
      ] or >
      }
      [ (tWriteBegin)
      | tWriteBegin:
      @WriteProc
       oEmitSourceCoordinate
       [ (tTrapBegin)
       | *:
       @WriteParameter
        ?tTrapBegin (tTrapBegin)
        ?tLiteralAddress (tLiteralAddress)
        @OperandPushVariable
         oOperandPushVariable
         [ (tVarParm)
         | *:
         [ (tVarParm)
         | *:
         [ (tVarParm)
         | *:
         >>
        ;OperandPushVariable
        @OperandForceToStack
         [ oOperandChooseLength (two)
         | two:
         oEmitSingle(iPush)
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mStatic)
          | *:
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandPushMode(mStack)
         ] or >
         >>
        ;OperandForceToStack
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mStack)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        ?tVarParm (tVarParm)
        ?tParmEnd (tParmEnd)
        @OperandPushExpression
         [ (tLiteralString)
         | tLiteralString:
         oEmitNone(iData)
         oEmitString
         oEmitNone(iText)
         oOperandPushString
         @EmitStringDescriptor
          @OperandForceAddressIntoTemp
           [ oOperandChooseMode (mString)
           | mString:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           oOperandSwap
           oEmitDouble(iLoada)
           oOperandPop
           ] or >
           oOperandSetLength(two)
           >>
          ;OperandForceAddressIntoTemp
          >>
         ;EmitStringDescriptor
         ] or >
         }
         [ (tLiteralAddress)
         | tLiteralAddress:
         @OperandPushVariable
          oOperandPushVariable
          [ (tFetchString)
          | *:
          [ (tFetchString)
          | *:
          [ (tFetchString)
          | tFetchString:
          oOperandSetLength(regCX)
          ] or >
          >>
         ;OperandPushVariable
         ] or >
         }
         [ (tConcatenate)
         | tConcatenate:
         @OperandConcatenatePop
          @SaveTempRegsToStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(one)
           oEmitSingle(iPush)
           oOperandSetRegnum(two)
           oEmitSingle(iPush)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPush)
           oOperandSetRegnum(four)
           oEmitSingle(iPush)
           oOperandPop
           >>
          ;SaveTempRegsToStack
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mStatic)
          | *:
          oEmitDouble(iLoada)
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStatic)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oEmitDouble(iMov)
          ] or >
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mTrap)
          oOperandSetValue(trConcatenate)
          oOperandSetLength(two)
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(eight)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          oOperandPushMode(mScratchReg1)
          oOperandSetLength(two)
          oOperandPushMode(mResultReg)
          oOperandSetLength(two)
          oEmitDouble(iMov)
          oOperandPop
          @RestoreTempRegsFromStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(four)
           oEmitSingle(iPop)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPop)
           oOperandSetRegnum(two)
           oEmitSingle(iPop)
           oOperandSetRegnum(one)
           oEmitSingle(iPop)
           oOperandPop
           >>
          ;RestoreTempRegsFromStack
          @OperandForceIntoTemp
           [ oOperandChooseMode (mScratchReg1)
           | *:
           [ oOperandChooseLength (two)
           | two:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           ] or >
           oOperandSwap
           oEmitDouble(iMov)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mScratchReg1)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandSetMode(mTemp)
           >>
          ;OperandForceIntoTemp
          >>
         ;OperandConcatenatePop
         ] or >
         }
         [ (tLiteralString)
         | tLiteralString:
         oEmitNone(iData)
         oEmitString
         oEmitNone(iText)
         oOperandPushString
         @EmitStringDescriptor
          @OperandForceAddressIntoTemp
           [ oOperandChooseMode (mString)
           | mString:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           oOperandSwap
           oEmitDouble(iLoada)
           oOperandPop
           ] or >
           oOperandSetLength(two)
           >>
          ;OperandForceAddressIntoTemp
          >>
         ;EmitStringDescriptor
         ] or >
         }
         [ (tConcatenate)
         | tConcatenate:
         @OperandConcatenatePop
          @SaveTempRegsToStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(one)
           oEmitSingle(iPush)
           oOperandSetRegnum(two)
           oEmitSingle(iPush)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPush)
           oOperandSetRegnum(four)
           oEmitSingle(iPush)
           oOperandPop
           >>
          ;SaveTempRegsToStack
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oEmitDouble(iMov)
          ] or >
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oEmitDouble(iMov)
          ] or >
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mTrap)
          oOperandSetValue(trConcatenate)
          oOperandSetLength(two)
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(eight)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          oOperandPushMode(mScratchReg1)
          oOperandSetLength(two)
          oOperandPushMode(mResultReg)
          oOperandSetLength(two)
          oEmitDouble(iMov)
          oOperandPop
          @RestoreTempRegsFromStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(four)
           oEmitSingle(iPop)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPop)
           oOperandSetRegnum(two)
           oEmitSingle(iPop)
           oOperandSetRegnum(one)
           oEmitSingle(iPop)
           oOperandPop
           >>
          ;RestoreTempRegsFromStack
          @OperandForceIntoTemp
           [ oOperandChooseMode (mScratchReg1)
           | *:
           [ oOperandChooseLength (two)
           | two:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           ] or >
           oOperandSwap
           oEmitDouble(iMov)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mScratchReg1)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandSetMode(mTemp)
           >>
          ;OperandForceIntoTemp
          >>
         ;OperandConcatenatePop
         ] or >
         }
         [ (tParmEnd)
         | *:
         ] or >
         >>
        ;OperandPushExpression
        [ (tParmEnd)
        | *:
        @OperandForceToStack
         [ oOperandChooseLength (two)
         | two:
         oEmitSingle(iPush)
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oTempFree
          ] or >
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandPushMode(mStack)
         ] or >
         >>
        ;OperandForceToStack
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mStack)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        ?tParmEnd (tParmEnd)
        @OperandPushExpression
         [ (tLiteralInteger)
         | tLiteralInteger:
         oOperandPushInteger
         ] or >
         }
         [ (tParmEnd)
         | *:
         ] or >
         >>
        ;OperandPushExpression
        @OperandForceToStack
         [ oOperandChooseLength (two)
         | two:
         oEmitSingle(iPush)
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mManifest)
          | *:
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandPushMode(mStack)
         ] or >
         >>
        ;OperandForceToStack
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mStack)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        ?tParmEnd (tParmEnd)
        ?tTrap (tTrap)
        oOperandPushTrap
        oEmitSingle(iCall)
        oOperandPop
        oOperandPushMode(mStackReg)
        oOperandSetLength(two)
        oOperandPushMode(mManifest)
        oOperandSetLength(two)
        oOperandSetValue(twelve)
        oEmitDouble(iAdd)
        oOperandPop
        oOperandPop
        >>
       ;WriteParameter
       }
       [ (tWriteEnd)
       | tWriteEnd:
       ] or >
       >>
      ;WriteProc
      ] or >
      }
      [ (tTrapBegin)
      | tTrapBegin:
      @TrapStmt
       oEmitSourceCoordinate
       [ (tLiteralAddress)
       | tLiteralAddress:
       @OperandPushVariable
        oOperandPushVariable
        [ (tVarParm)
        | *:
        [ (tVarParm)
        | *:
        [ (tVarParm)
        | *:
        >>
       ;OperandPushVariable
       oOperandPushCopy
       @OperandForceToStack
        [ oOperandChooseLength (two)
        | two:
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mStatic)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mStack)
        ] or >
        >>
       ;OperandForceToStack
       oOperandPop
       ?tVarParm (tVarParm)
       ?tParmEnd (tParmEnd)
       [ (tTrap)
       | tTrap:
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStatic)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushTrap
       oEmitSingle(iCall)
       oOperandPop
       oOperandPushMode(mStackReg)
       oOperandSetLength(two)
       oOperandPushMode(mManifest)
       oOperandSetLength(two)
       oOperandSetValue(four)
       oEmitDouble(iAdd)
       oOperandPop
       oOperandPop
       ] or >
       ] or >
       >>
      ;TrapStmt
      ] or >
      }
      [ (tWriteBegin)
      | tWriteBegin:
      @WriteProc
       oEmitSourceCoordinate
       [ (tTrapBegin)
       | *:
       @WriteParameter
        ?tTrapBegin (tTrapBegin)
        ?tLiteralAddress (tLiteralAddress)
        @OperandPushVariable
         oOperandPushVariable
         [ (tVarParm)
         | *:
         [ (tVarParm)
         | *:
         [ (tVarParm)
         | *:
         >>
        ;OperandPushVariable
        @OperandForceToStack
         [ oOperandChooseLength (two)
         | two:
         oEmitSingle(iPush)
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mStatic)
          | *:
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandPushMode(mStack)
         ] or >
         >>
        ;OperandForceToStack
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mStack)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        ?tVarParm (tVarParm)
        ?tParmEnd (tParmEnd)
        @OperandPushExpression
         [ (tLiteralString)
         | tLiteralString:
         oEmitNone(iData)
         oEmitString
         oEmitNone(iText)
         oOperandPushString
         @EmitStringDescriptor
          @OperandForceAddressIntoTemp
           [ oOperandChooseMode (mString)
           | mString:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           oOperandSwap
           oEmitDouble(iLoada)
           oOperandPop
           ] or >
           oOperandSetLength(two)
           >>
          ;OperandForceAddressIntoTemp
          >>
         ;EmitStringDescriptor
         ] or >
         }
         [ (tLiteralAddress)
         | tLiteralAddress:
         @OperandPushVariable
          oOperandPushVariable
          [ (tFetchString)
          | *:
          [ (tFetchString)
          | *:
          [ (tFetchString)
          | tFetchString:
          oOperandSetLength(regCX)
          ] or >
          >>
         ;OperandPushVariable
         ] or >
         }
         [ (tConcatenate)
         | tConcatenate:
         @OperandConcatenatePop
          @SaveTempRegsToStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(one)
           oEmitSingle(iPush)
           oOperandSetRegnum(two)
           oEmitSingle(iPush)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPush)
           oOperandSetRegnum(four)
           oEmitSingle(iPush)
           oOperandPop
           >>
          ;SaveTempRegsToStack
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mStatic)
          | *:
          oEmitDouble(iLoada)
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStatic)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oEmitDouble(iMov)
          ] or >
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mTrap)
          oOperandSetValue(trConcatenate)
          oOperandSetLength(two)
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(eight)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          oOperandPushMode(mScratchReg1)
          oOperandSetLength(two)
          oOperandPushMode(mResultReg)
          oOperandSetLength(two)
          oEmitDouble(iMov)
          oOperandPop
          @RestoreTempRegsFromStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(four)
           oEmitSingle(iPop)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPop)
           oOperandSetRegnum(two)
           oEmitSingle(iPop)
           oOperandSetRegnum(one)
           oEmitSingle(iPop)
           oOperandPop
           >>
          ;RestoreTempRegsFromStack
          @OperandForceIntoTemp
           [ oOperandChooseMode (mScratchReg1)
           | *:
           [ oOperandChooseLength (two)
           | two:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           ] or >
           oOperandSwap
           oEmitDouble(iMov)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mScratchReg1)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandSetMode(mTemp)
           >>
          ;OperandForceIntoTemp
          >>
         ;OperandConcatenatePop
         ] or >
         }
         [ (tLiteralString)
         | tLiteralString:
         oEmitNone(iData)
         oEmitString
         oEmitNone(iText)
         oOperandPushString
         @EmitStringDescriptor
          @OperandForceAddressIntoTemp
           [ oOperandChooseMode (mString)
           | mString:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           oOperandSwap
           oEmitDouble(iLoada)
           oOperandPop
           ] or >
           oOperandSetLength(two)
           >>
          ;OperandForceAddressIntoTemp
          >>
         ;EmitStringDescriptor
         ] or >
         }
         [ (tConcatenate)
         | tConcatenate:
         @OperandConcatenatePop
          @SaveTempRegsToStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(one)
           oEmitSingle(iPush)
           oOperandSetRegnum(two)
           oEmitSingle(iPush)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPush)
           oOperandSetRegnum(four)
           oEmitSingle(iPush)
           oOperandPop
           >>
          ;SaveTempRegsToStack
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oEmitDouble(iMov)
          ] or >
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oEmitDouble(iMov)
          ] or >
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mTrap)
          oOperandSetValue(trConcatenate)
          oOperandSetLength(two)
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(eight)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          oOperandPushMode(mScratchReg1)
          oOperandSetLength(two)
          oOperandPushMode(mResultReg)
          oOperandSetLength(two)
          oEmitDouble(iMov)
          oOperandPop
          @RestoreTempRegsFromStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(four)
           oEmitSingle(iPop)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPop)
           oOperandSetRegnum(two)
           oEmitSingle(iPop)
           oOperandSetRegnum(one)
           oEmitSingle(iPop)
           oOperandPop
           >>
          ;RestoreTempRegsFromStack
          @OperandForceIntoTemp
           [ oOperandChooseMode (mScratchReg1)
           | *:
           [ oOperandChooseLength (two)
           | two:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           ] or >
           oOperandSwap
           oEmitDouble(iMov)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mScratchReg1)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandSetMode(mTemp)
           >>
          ;OperandForceIntoTemp
          >>
         ;OperandConcatenatePop
         ] or >
         }
         [ (tParmEnd)
         | *:
         ] or >
         >>
        ;OperandPushExpression
        [ (tParmEnd)
        | *:
        @OperandForceToStack
         [ oOperandChooseLength (two)
         | two:
         oEmitSingle(iPush)
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oTempFree
          ] or >
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandPushMode(mStack)
         ] or >
         >>
        ;OperandForceToStack
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mStack)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        ?tParmEnd (tParmEnd)
        @OperandPushExpression
         [ (tLiteralInteger)
         | tLiteralInteger:
         oOperandPushInteger
         ] or >
         }
         [ (tParmEnd)
         | *:
         ] or >
         >>
        ;OperandPushExpression
        @OperandForceToStack
         [ oOperandChooseLength (two)
         | two:
         oEmitSingle(iPush)
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mManifest)
          | *:
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandPushMode(mStack)
         ] or >
         >>
        ;OperandForceToStack
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mStack)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        ?tParmEnd (tParmEnd)
        ?tTrap (tTrap)
        oOperandPushTrap
        oEmitSingle(iCall)
        oOperandPop
        oOperandPushMode(mStackReg)
        oOperandSetLength(two)
        oOperandPushMode(mManifest)
        oOperandSetLength(two)
        oOperandSetValue(twelve)
        oEmitDouble(iAdd)
        oOperandPop
        oOperandPop
        >>
       ;WriteParameter
       }
       [ (tWriteEnd)
       | tWriteEnd:
       ] or >
       >>
      ;WriteProc
      ] or >
      }
      [ (tTrapBegin)
      | tTrapBegin:
      @TrapStmt
       oEmitSourceCoordinate
       [ (tLiteralAddress)
       | tLiteralAddress:
       @OperandPushVariable
        oOperandPushVariable
        [ (tVarParm)
        | *:
        [ (tVarParm)
        | *:
        [ (tVarParm)
        | *:
        >>
       ;OperandPushVariable
       oOperandPushCopy
       @OperandForceToStack
        [ oOperandChooseLength (two)
        | two:
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mStatic)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mStack)
        ] or >
        >>
       ;OperandForceToStack
       oOperandPop
       ?tVarParm (tVarParm)
       ?tParmEnd (tParmEnd)
       [ (tTrap)
       | tTrap:
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStatic)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushTrap
       oEmitSingle(iCall)
       oOperandPop
       oOperandPushMode(mStackReg)
       oOperandSetLength(two)
       oOperandPushMode(mManifest)
       oOperandSetLength(two)
       oOperandSetValue(four)
       oEmitDouble(iAdd)
       oOperandPop
       oOperandPop
       ] or >
       ] or >
       >>
      ;TrapStmt
      ] or >
      }
      [ (tTrapBegin)
      | tTrapBegin:
      @TrapStmt
       oEmitSourceCoordinate
       [ (tLiteralAddress)
       | tLiteralAddress:
       @OperandPushVariable
        oOperandPushVariable
        [ (tVarParm)
        | *:
        [ (tVarParm)
        | *:
        [ (tVarParm)
        | *:
        >>
       ;OperandPushVariable
       oOperandPushCopy
       @OperandForceToStack
        [ oOperandChooseLength (two)
        | two:
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mStatic)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mStack)
        ] or >
        >>
       ;OperandForceToStack
       oOperandPop
       ?tVarParm (tVarParm)
       ?tParmEnd (tParmEnd)
       [ (tTrap)
       | tTrap:
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStatic)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushTrap
       oEmitSingle(iCall)
       oOperandPop
       oOperandPushMode(mStackReg)
       oOperandSetLength(two)
       oOperandPushMode(mManifest)
       oOperandSetLength(two)
       oOperandSetValue(four)
       oEmitDouble(iAdd)
       oOperandPop
       oOperandPop
       ] or >
       ] or >
       >>
      ;TrapStmt
      ] or >
      }
      [ (tIfMerge)
      | *:
      ] or >
      >>
     ;Statements
     [ (tIfMerge)
     | tIfMerge:
     oEmitUnconditionalForwardBranch
     oFixAndFreeShuntList
     oOperandPop
     oFixPushLastAddress
     oEmitMergeSourceCoordinate
     @Statements
      [ (tIfBegin)
      | tIfBegin:
      @IfStmt
       oEmitSourceCoordinate
       @OperandPushBooleanControlExpression
        @OperandPushExpression
         [ (tLiteralAddress)
         | tLiteralAddress:
         @OperandPushVariable
          oOperandPushVariable
          [ (tFetchString)
          | *:
          [ (tFetchString)
          | *:
          [ (tFetchString)
          | tFetchString:
          oOperandSetLength(regCX)
          ] or >
          >>
         ;OperandPushVariable
         ] or >
         }
         [ (tLiteralAddress)
         | tLiteralAddress:
         @OperandPushVariable
          oOperandPushVariable
          [ (tFetchString)
          | *:
          [ (tFetchString)
          | *:
          [ (tFetchString)
          | tFetchString:
          oOperandSetLength(regCX)
          ] or >
          >>
         ;OperandPushVariable
         ] or >
         }
         [ (tLength)
         | tLength:
         @OperandLength
          @SaveTempRegsToStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(one)
           oEmitSingle(iPush)
           oOperandSetRegnum(two)
           oEmitSingle(iPush)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPush)
           oOperandSetRegnum(four)
           oEmitSingle(iPush)
           oOperandPop
           >>
          ;SaveTempRegsToStack
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mStatic)
          | *:
          oEmitDouble(iLoada)
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStatic)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mTrap)
          oOperandSetValue(trLength)
          oOperandSetLength(two)
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(four)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          oOperandPushMode(mScratchReg1)
          oOperandSetLength(two)
          oOperandPushMode(mResultReg)
          oOperandSetLength(two)
          oEmitDouble(iMov)
          oOperandPop
          @RestoreTempRegsFromStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(four)
           oEmitSingle(iPop)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPop)
           oOperandSetRegnum(two)
           oEmitSingle(iPop)
           oOperandSetRegnum(one)
           oEmitSingle(iPop)
           oOperandPop
           >>
          ;RestoreTempRegsFromStack
          @OperandForceIntoTemp
           [ oOperandChooseMode (mScratchReg1)
           | *:
           [ oOperandChooseLength (two)
           | two:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           ] or >
           oOperandSwap
           oEmitDouble(iMov)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mScratchReg1)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandSetMode(mTemp)
           >>
          ;OperandForceIntoTemp
          >>
         ;OperandLength
         ] or >
         }
         [ (tLiteralInteger)
         | tLiteralInteger:
         oOperandPushInteger
         ] or >
         }
         [ (tSubtract)
         | tSubtract:
         @OperandSubtractPop
          @OperandAreLeftAndRightManifest
           [ oOperandChooseMode (mManifest)
           | mManifest:
           oOperandSwap
           [ oOperandChooseMode (mTemp)
           | *:
           oOperandSwap
           >>no
          ;OperandAreLeftAndRightManifest
          [@OperandAreLeftAndRightManifest (no)
          | no:
          [ oOperandChooseManifestValue (one)
          | one:
          oOperandPop
          @OperandForceIntoTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           ] or >
           >>
          ;OperandForceIntoTemp
          oEmitSingle(iDec)
          ] or >
          ] or >
          >>
         ;OperandSubtractPop
         ] or >
         }
         [ (tLiteralAddress)
         | tLiteralAddress:
         @OperandPushVariable
          oOperandPushVariable
          [ (tFetchString)
          | *:
          [ (tFetchString)
          | *:
          [ (tFetchString)
          | tFetchString:
          oOperandSetLength(regCX)
          ] or >
          >>
         ;OperandPushVariable
         ] or >
         }
         [ (tLength)
         | tLength:
         @OperandLength
          @SaveTempRegsToStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(one)
           oEmitSingle(iPush)
           oOperandSetRegnum(two)
           oEmitSingle(iPush)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPush)
           oOperandSetRegnum(four)
           oEmitSingle(iPush)
           oOperandPop
           >>
          ;SaveTempRegsToStack
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mStatic)
          | *:
          oEmitDouble(iLoada)
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStatic)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mTrap)
          oOperandSetValue(trLength)
          oOperandSetLength(two)
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(four)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          oOperandPushMode(mScratchReg1)
          oOperandSetLength(two)
          oOperandPushMode(mResultReg)
          oOperandSetLength(two)
          oEmitDouble(iMov)
          oOperandPop
          @RestoreTempRegsFromStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(four)
           oEmitSingle(iPop)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPop)
           oOperandSetRegnum(two)
           oEmitSingle(iPop)
           oOperandSetRegnum(one)
           oEmitSingle(iPop)
           oOperandPop
           >>
          ;RestoreTempRegsFromStack
          @OperandForceIntoTemp
           [ oOperandChooseMode (mScratchReg1)
           | *:
           [ oOperandChooseLength (two)
           | two:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           ] or >
           oOperandSwap
           oEmitDouble(iMov)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mScratchReg1)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandSetMode(mTemp)
           >>
          ;OperandForceIntoTemp
          >>
         ;OperandLength
         ] or >
         }
         [ (tSubstring)
         | tSubstring:
         @OperandSubstringPopPop
          @SaveTempRegsToStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(one)
           oEmitSingle(iPush)
           oOperandSetRegnum(two)
           oEmitSingle(iPush)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPush)
           oOperandSetRegnum(four)
           oEmitSingle(iPush)
           oOperandPop
           >>
          ;SaveTempRegsToStack
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mStatic)
          | *:
          oEmitDouble(iLoada)
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStatic)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mTrap)
          oOperandSetValue(trSubstring)
          oOperandSetLength(two)
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(twelve)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          oOperandPushMode(mScratchReg1)
          oOperandSetLength(two)
          oOperandPushMode(mResultReg)
          oOperandSetLength(two)
          oEmitDouble(iMov)
          oOperandPop
          @RestoreTempRegsFromStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(four)
           oEmitSingle(iPop)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPop)
           oOperandSetRegnum(two)
           oEmitSingle(iPop)
           oOperandSetRegnum(one)
           oEmitSingle(iPop)
           oOperandPop
           >>
          ;RestoreTempRegsFromStack
          @OperandForceIntoTemp
           [ oOperandChooseMode (mScratchReg1)
           | *:
           [ oOperandChooseLength (two)
           | two:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           ] or >
           oOperandSwap
           oEmitDouble(iMov)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mScratchReg1)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandSetMode(mTemp)
           >>
          ;OperandForceIntoTemp
          >>
         ;OperandSubstringPopPop
         ] or >
         }
         [ (tLiteralString)
         | tLiteralString:
         oEmitNone(iData)
         oEmitString
         oEmitNone(iText)
         oOperandPushString
         @EmitStringDescriptor
          @OperandForceAddressIntoTemp
           [ oOperandChooseMode (mString)
           | mString:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           oOperandSwap
           oEmitDouble(iLoada)
           oOperandPop
           ] or >
           oOperandSetLength(two)
           >>
          ;OperandForceAddressIntoTemp
          >>
         ;EmitStringDescriptor
         ] or >
         }
         [ (tStringEqual)
         | tStringEqual:
         @OperandStringEqualPop
          @SaveTempRegsToStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(one)
           oEmitSingle(iPush)
           oOperandSetRegnum(two)
           oEmitSingle(iPush)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPush)
           oOperandSetRegnum(four)
           oEmitSingle(iPush)
           oOperandPop
           >>
          ;SaveTempRegsToStack
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oEmitDouble(iMov)
          ] or >
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oEmitDouble(iMov)
          ] or >
          oOperandSwap
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mTrap)
          oOperandSetValue(trStringEqual)
          oOperandSetLength(two)
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(eight)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          oOperandPushMode(mScratchReg1)
          oOperandSetLength(two)
          oOperandPushMode(mResultReg)
          oOperandSetLength(two)
          oEmitDouble(iMov)
          oOperandPop
          @RestoreTempRegsFromStack
           oOperandPushMode(mTemp)
           oOperandSetLength(two)
           oOperandSetRegnum(four)
           oEmitSingle(iPop)
           oOperandSetRegnum(regCX)
           oEmitSingle(iPop)
           oOperandSetRegnum(two)
           oEmitSingle(iPop)
           oOperandSetRegnum(one)
           oEmitSingle(iPop)
           oOperandPop
           >>
          ;RestoreTempRegsFromStack
          @OperandForceIntoTemp
           [ oOperandChooseMode (mScratchReg1)
           | *:
           [ oOperandChooseLength (two)
           | two:
           @OperandPushTempWord
            oTempAllocate
            oOperandPushTemp
            oOperandSetValue(zero)
            oOperandSetLength(two)
            >>
           ;OperandPushTempWord
           ] or >
           oOperandSwap
           oEmitDouble(iMov)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mScratchReg1)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandSetMode(mTemp)
           >>
          ;OperandForceIntoTemp
          >>
         ;OperandStringEqualPop
         ] or >
         }
         [ (tIfThen)
         | *:
         ] or >
         >>
        ;OperandPushExpression
        @OperandForceToJumpCondition
         [ oOperandIsJumpCondition (no)
         | *:
         [ oOperandChooseManifestValue ()
         | *:
         @EmitTst
          [ oOperandChooseLength (two)
          | two:
          oOperandPushMode(mManifest)
          oOperandSetValue(zero)
          oOperandSetLength(two)
          ] or >
          @EmitCmp
           oOperandSwap
           [ oOperandChooseMode (mTemp)
           | *:
           oOperandSwap
           @OperandLeftOrRightIsTemp
            [ oOperandChooseMode (mManifest)
            | *:
            oOperandSwap
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oOperandSwap
            >>yes
           ;OperandLeftOrRightIsTemp
           [@OperandLeftOrRightIsTemp (yes)
           | yes:
           oEmitDouble(iCmp)
           ] or >
           >>
          ;EmitCmp
          oOperandPop
          >>
         ;EmitTst
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oTempFree
          ] or >
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandPushJumpCondition(iJne)
         >>
        ;OperandForceToJumpCondition
        >>
       ;OperandPushBooleanControlExpression
       ?tIfThen (tIfThen)
       [ oOperandChooseJumpCondition (iJne)
       | *:
       oOperandComplementJumpCondition
       @OperandInfixOr
        @OperandForceToJumpCondition
         [ oOperandIsJumpCondition (yes)
         | yes:
         ] or >
         >>
        ;OperandForceToJumpCondition
        [ oOperandChooseJumpCondition (iJeq)
        | *:
        oEmitConditionalForwardBranch
        oFixAndFreeFalseBranches
        oFixPushLastAddress
        oOperandMergeShuntsWithAddress
        oFixPopAddress
        >>
       ;OperandInfixOr
       @Statements
        [ (tWriteBegin)
        | tWriteBegin:
        @WriteProc
         oEmitSourceCoordinate
         [ (tTrapBegin)
         | *:
         @WriteParameter
          ?tTrapBegin (tTrapBegin)
          ?tLiteralAddress (tLiteralAddress)
          @OperandPushVariable
           oOperandPushVariable
           [ (tVarParm)
           | *:
           [ (tVarParm)
           | *:
           [ (tVarParm)
           | *:
           >>
          ;OperandPushVariable
          @OperandForceToStack
           [ oOperandChooseLength (two)
           | two:
           oEmitSingle(iPush)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mStatic)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushMode(mStack)
           ] or >
           >>
          ;OperandForceToStack
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStack)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          ?tVarParm (tVarParm)
          ?tParmEnd (tParmEnd)
          @OperandPushExpression
           [ (tLiteralString)
           | tLiteralString:
           oEmitNone(iData)
           oEmitString
           oEmitNone(iText)
           oOperandPushString
           @EmitStringDescriptor
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mString)
             | mString:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            >>
           ;EmitStringDescriptor
           ] or >
           }
           [ (tParmEnd)
           | *:
           ] or >
           >>
          ;OperandPushExpression
          [ (tParmEnd)
          | *:
          @OperandForceToStack
           [ oOperandChooseLength (two)
           | two:
           oEmitSingle(iPush)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oTempFree
            ] or >
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushMode(mStack)
           ] or >
           >>
          ;OperandForceToStack
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStack)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          ?tParmEnd (tParmEnd)
          @OperandPushExpression
           [ (tLiteralInteger)
           | tLiteralInteger:
           oOperandPushInteger
           ] or >
           }
           [ (tParmEnd)
           | *:
           ] or >
           >>
          ;OperandPushExpression
          @OperandForceToStack
           [ oOperandChooseLength (two)
           | two:
           oEmitSingle(iPush)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mManifest)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushMode(mStack)
           ] or >
           >>
          ;OperandForceToStack
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStack)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          ?tParmEnd (tParmEnd)
          ?tTrap (tTrap)
          oOperandPushTrap
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(twelve)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          >>
         ;WriteParameter
         }
         [ (tWriteEnd)
         | tWriteEnd:
         ] or >
         >>
        ;WriteProc
        ] or >
        }
        [ (tTrapBegin)
        | tTrapBegin:
        @TrapStmt
         oEmitSourceCoordinate
         [ (tLiteralAddress)
         | tLiteralAddress:
         @OperandPushVariable
          oOperandPushVariable
          [ (tVarParm)
          | *:
          [ (tVarParm)
          | *:
          [ (tVarParm)
          | *:
          >>
         ;OperandPushVariable
         oOperandPushCopy
         @OperandForceToStack
          [ oOperandChooseLength (two)
          | two:
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStatic)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mStack)
          ] or >
          >>
         ;OperandForceToStack
         oOperandPop
         ?tVarParm (tVarParm)
         ?tParmEnd (tParmEnd)
         [ (tTrap)
         | tTrap:
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mStatic)
          | *:
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandPushTrap
         oEmitSingle(iCall)
         oOperandPop
         oOperandPushMode(mStackReg)
         oOperandSetLength(two)
         oOperandPushMode(mManifest)
         oOperandSetLength(two)
         oOperandSetValue(four)
         oEmitDouble(iAdd)
         oOperandPop
         oOperandPop
         ] or >
         ] or >
         >>
        ;TrapStmt
        ] or >
        }
        [ (tIfMerge)
        | *:
        ] or >
        >>
       ;Statements
       [ (tIfMerge)
       | tIfMerge:
       oEmitUnconditionalForwardBranch
       oFixAndFreeShuntList
       oOperandPop
       oFixPushLastAddress
       oEmitMergeSourceCoordinate
       @Statements
        [ (tWriteBegin)
        | tWriteBegin:
        @WriteProc
         oEmitSourceCoordinate
         [ (tTrapBegin)
         | *:
         @WriteParameter
          ?tTrapBegin (tTrapBegin)
          ?tLiteralAddress (tLiteralAddress)
          @OperandPushVariable
           oOperandPushVariable
           [ (tVarParm)
           | *:
           [ (tVarParm)
           | *:
           [ (tVarParm)
           | *:
           >>
          ;OperandPushVariable
          @OperandForceToStack
           [ oOperandChooseLength (two)
           | two:
           oEmitSingle(iPush)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mStatic)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushMode(mStack)
           ] or >
           >>
          ;OperandForceToStack
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStack)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          ?tVarParm (tVarParm)
          ?tParmEnd (tParmEnd)
          @OperandPushExpression
           [ (tLiteralString)
           | tLiteralString:
           oEmitNone(iData)
           oEmitString
           oEmitNone(iText)
           oOperandPushString
           @EmitStringDescriptor
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mString)
             | mString:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            >>
           ;EmitStringDescriptor
           ] or >
           }
           [ (tParmEnd)
           | *:
           ] or >
           >>
          ;OperandPushExpression
          [ (tParmEnd)
          | *:
          @OperandForceToStack
           [ oOperandChooseLength (two)
           | two:
           oEmitSingle(iPush)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oTempFree
            ] or >
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushMode(mStack)
           ] or >
           >>
          ;OperandForceToStack
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStack)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          ?tParmEnd (tParmEnd)
          @OperandPushExpression
           [ (tLiteralInteger)
           | tLiteralInteger:
           oOperandPushInteger
           ] or >
           }
           [ (tParmEnd)
           | *:
           ] or >
           >>
          ;OperandPushExpression
          @OperandForceToStack
           [ oOperandChooseLength (two)
           | two:
           oEmitSingle(iPush)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mManifest)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushMode(mStack)
           ] or >
           >>
          ;OperandForceToStack
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStack)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          ?tParmEnd (tParmEnd)
          ?tTrap (tTrap)
          oOperandPushTrap
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(twelve)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          >>
         ;WriteParameter
         }
         [ (tWriteEnd)
         | tWriteEnd:
         ] or >
         >>
        ;WriteProc
        ] or >
        }
        [ (tTrapBegin)
        | tTrapBegin:
        @TrapStmt
         oEmitSourceCoordinate
         [ (tLiteralAddress)
         | tLiteralAddress:
         @OperandPushVariable
          oOperandPushVariable
          [ (tVarParm)
          | *:
          [ (tVarParm)
          | *:
          [ (tVarParm)
          | *:
          >>
         ;OperandPushVariable
         oOperandPushCopy
         @OperandForceToStack
          [ oOperandChooseLength (two)
          | two:
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStatic)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mStack)
          ] or >
          >>
         ;OperandForceToStack
         oOperandPop
         ?tVarParm (tVarParm)
         ?tParmEnd (tParmEnd)
         [ (tTrap)
         | tTrap:
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mStatic)
          | *:
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandPushTrap
         oEmitSingle(iCall)
         oOperandPop
         oOperandPushMode(mStackReg)
         oOperandSetLength(two)
         oOperandPushMode(mManifest)
         oOperandSetLength(two)
         oOperandSetValue(four)
         oEmitDouble(iAdd)
         oOperandPop
         oOperandPop
         ] or >
         ] or >
         >>
        ;TrapStmt
        ] or >
        }
        [ (tIfEnd)
        | *:
        ] or >
        >>
       ;Statements
       oFixForwardBranch
       oFixPopAddress
       ?tIfEnd (tIfEnd)
       ] or >
       >>
      ;IfStmt
      ] or >
      }
      [ (tIfEnd)
      | *:
      ] or >
      >>
     ;Statements
     oFixForwardBranch
     oFixPopAddress
     ?tIfEnd (tIfEnd)
     ] or >
     >>
    ;IfStmt
    ] or >
    }
    [ (tDoBreakIf)
    | *:
    ] or >
    >>
   ;Statements
   ?tDoBreakIf (tDoBreakIf)
   @OperandPushBooleanControlExpression
    @OperandPushExpression
     [ (tLiteralAddress)
     | tLiteralAddress:
     @OperandPushVariable
      oOperandPushVariable
      [ (tFetchString)
      | *:
      [ (tFetchString)
      | *:
      [ (tFetchString)
      | tFetchString:
      oOperandSetLength(regCX)
      ] or >
      >>
     ;OperandPushVariable
     ] or >
     }
     [ (tLiteralString)
     | tLiteralString:
     oEmitNone(iData)
     oEmitString
     oEmitNone(iText)
     oOperandPushString
     @EmitStringDescriptor
      @OperandForceAddressIntoTemp
       [ oOperandChooseMode (mString)
       | mString:
       @OperandPushTempWord
        oTempAllocate
        oOperandPushTemp
        oOperandSetValue(zero)
        oOperandSetLength(two)
        >>
       ;OperandPushTempWord
       oOperandSwap
       oEmitDouble(iLoada)
       oOperandPop
       ] or >
       oOperandSetLength(two)
       >>
      ;OperandForceAddressIntoTemp
      >>
     ;EmitStringDescriptor
     ] or >
     }
     [ (tStringEqual)
     | tStringEqual:
     @OperandStringEqualPop
      @SaveTempRegsToStack
       oOperandPushMode(mTemp)
       oOperandSetLength(two)
       oOperandSetRegnum(one)
       oEmitSingle(iPush)
       oOperandSetRegnum(two)
       oEmitSingle(iPush)
       oOperandSetRegnum(regCX)
       oEmitSingle(iPush)
       oOperandSetRegnum(four)
       oEmitSingle(iPush)
       oOperandPop
       >>
      ;SaveTempRegsToStack
      @OperandPushTempWord
       oTempAllocate
       oOperandPushTemp
       oOperandSetValue(zero)
       oOperandSetLength(two)
       >>
      ;OperandPushTempWord
      oOperandSwap
      [ oOperandChooseMode (mTemp)
      | mTemp:
      oEmitDouble(iMov)
      ] or >
      oOperandSwap
      oEmitSingle(iPush)
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mTemp)
       | mTemp:
       oTempFree
       ] or >
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mTemp)
       | mTemp:
       oTempFree
       ] or >
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      @OperandPushTempWord
       oTempAllocate
       oOperandPushTemp
       oOperandSetValue(zero)
       oOperandSetLength(two)
       >>
      ;OperandPushTempWord
      oOperandSwap
      [ oOperandChooseMode (mStatic)
      | *:
      oEmitDouble(iLoada)
      oOperandSwap
      oEmitSingle(iPush)
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mTemp)
       | mTemp:
       oTempFree
       ] or >
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStatic)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      oOperandPushMode(mTrap)
      oOperandSetValue(trStringEqual)
      oOperandSetLength(two)
      oEmitSingle(iCall)
      oOperandPop
      oOperandPushMode(mStackReg)
      oOperandSetLength(two)
      oOperandPushMode(mManifest)
      oOperandSetLength(two)
      oOperandSetValue(eight)
      oEmitDouble(iAdd)
      oOperandPop
      oOperandPop
      oOperandPushMode(mScratchReg1)
      oOperandSetLength(two)
      oOperandPushMode(mResultReg)
      oOperandSetLength(two)
      oEmitDouble(iMov)
      oOperandPop
      @RestoreTempRegsFromStack
       oOperandPushMode(mTemp)
       oOperandSetLength(two)
       oOperandSetRegnum(four)
       oEmitSingle(iPop)
       oOperandSetRegnum(regCX)
       oEmitSingle(iPop)
       oOperandSetRegnum(two)
       oEmitSingle(iPop)
       oOperandSetRegnum(one)
       oEmitSingle(iPop)
       oOperandPop
       >>
      ;RestoreTempRegsFromStack
      @OperandForceIntoTemp
       [ oOperandChooseMode (mScratchReg1)
       | *:
       [ oOperandChooseLength (two)
       | two:
       @OperandPushTempWord
        oTempAllocate
        oOperandPushTemp
        oOperandSetValue(zero)
        oOperandSetLength(two)
        >>
       ;OperandPushTempWord
       ] or >
       oOperandSwap
       oEmitDouble(iMov)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mScratchReg1)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandSetMode(mTemp)
       >>
      ;OperandForceIntoTemp
      >>
     ;OperandStringEqualPop
     ] or >
     }
     [ (tDoTest)
     | *:
     ] or >
     >>
    ;OperandPushExpression
    @OperandForceToJumpCondition
     [ oOperandIsJumpCondition (no)
     | *:
     [ oOperandChooseManifestValue ()
     | *:
     @EmitTst
      [ oOperandChooseLength (two)
      | two:
      oOperandPushMode(mManifest)
      oOperandSetValue(zero)
      oOperandSetLength(two)
      ] or >
      @EmitCmp
       oOperandSwap
       [ oOperandChooseMode (mTemp)
       | *:
       oOperandSwap
       @OperandLeftOrRightIsTemp
        [ oOperandChooseMode (mManifest)
        | *:
        oOperandSwap
        [ oOperandChooseMode (mTemp)
        | mTemp:
        oOperandSwap
        >>yes
       ;OperandLeftOrRightIsTemp
       [@OperandLeftOrRightIsTemp (yes)
       | yes:
       oEmitDouble(iCmp)
       ] or >
       >>
      ;EmitCmp
      oOperandPop
      >>
     ;EmitTst
     @OperandPopAndFreeTemp
      [ oOperandChooseMode (mTemp)
      | mTemp:
      oTempFree
      ] or >
      oOperandPop
      >>
     ;OperandPopAndFreeTemp
     oOperandPushJumpCondition(iJne)
     >>
    ;OperandForceToJumpCondition
    >>
   ;OperandPushBooleanControlExpression
   ?tDoTest (tDoTest)
   [ oOperandChooseJumpCondition (iJne)
   | *:
   @OperandInfixOr
    @OperandForceToJumpCondition
     [ oOperandIsJumpCondition (yes)
     | yes:
     ] or >
     >>
    ;OperandForceToJumpCondition
    [ oOperandChooseJumpCondition (iJne)
    | *:
    oEmitConditionalForwardBranch
    oFixAndFreeFalseBranches
    oFixPushLastAddress
    oOperandMergeShuntsWithAddress
    oFixPopAddress
    >>
   ;OperandInfixOr
   @Statements
    [ (tTrapBegin)
    | tTrapBegin:
    @TrapStmt
     oEmitSourceCoordinate
     [ (tLiteralAddress)
     | tLiteralAddress:
     @OperandPushVariable
      oOperandPushVariable
      [ (tVarParm)
      | *:
      [ (tVarParm)
      | *:
      [ (tVarParm)
      | *:
      >>
     ;OperandPushVariable
     oOperandPushCopy
     @OperandForceToStack
      [ oOperandChooseLength (two)
      | two:
      oEmitSingle(iPush)
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStatic)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      oOperandPushMode(mStack)
      ] or >
      >>
     ;OperandForceToStack
     oOperandPop
     ?tVarParm (tVarParm)
     ?tParmEnd (tParmEnd)
     [ (tTrap)
     | tTrap:
     @OperandPopAndFreeTemp
      [ oOperandChooseMode (mStatic)
      | *:
      oOperandPop
      >>
     ;OperandPopAndFreeTemp
     oOperandPushTrap
     oEmitSingle(iCall)
     oOperandPop
     oOperandPushMode(mStackReg)
     oOperandSetLength(two)
     oOperandPushMode(mManifest)
     oOperandSetLength(two)
     oOperandSetValue(four)
     oEmitDouble(iAdd)
     oOperandPop
     oOperandPop
     ] or >
     ] or >
     >>
    ;TrapStmt
    ] or >
    }
    [ (tDoEnd)
    | *:
    ] or >
    >>
   ;Statements
   ?tDoEnd (tDoEnd)
   oEmitUnconditionalBackwardBranch
   oFixAndFreeShuntList
   oFixPopAddress
   oOperandPop
   >>
  ;DoStmt
  ] or >
  }
  [ (tTrapBegin)
  | tTrapBegin:
  @TrapStmt
   oEmitSourceCoordinate
   [ (tTrap)
   | *:
   ?tTrap (tTrap)
   oOperandPushTrap
   oEmitSingle(iCall)
   oOperandPop
   >>
  ;TrapStmt
  ] or >
  }
  [ (tEndOfFile)
  | *:
  ] or >
  >>
 ;Block
 @EmitProgramEpilogue
  oEmitNone(iLeave)
  oEmitNone(iReturn)
  >>
 ;EmitProgramEpilogue
 >>
;Program
